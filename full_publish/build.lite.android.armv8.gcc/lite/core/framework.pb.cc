// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: framework.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "framework.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace paddle {
namespace framework {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* Version_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Version_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpDesc_Attr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpDesc_Attr_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpDesc_Var_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpDesc_Var_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpProto_Var_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpProto_Var_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpProto_Attr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpProto_Attr_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_TensorDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_TensorDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_LoDTensorDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_LoDTensorDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_LoDTensorArrayDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_LoDTensorArrayDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_ReaderDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_ReaderDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* VarType_Tuple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarType_Tuple_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VarType_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* VarDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VarDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockDesc_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProgramDesc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProgramDesc_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AttrType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_framework_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_framework_2eproto() {
  protobuf_AddDesc_framework_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "framework.proto");
  GOOGLE_CHECK(file != NULL);
  Version_descriptor_ = file->message_type(0);
  static const int Version_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Version, version_),
  };
  Version_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Version_descriptor_,
      Version::internal_default_instance(),
      Version_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Version, _has_bits_),
      -1,
      -1,
      sizeof(Version),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Version, _internal_metadata_));
  OpDesc_descriptor_ = file->message_type(1);
  static const int OpDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, outputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, is_target_),
  };
  OpDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpDesc_descriptor_,
      OpDesc::internal_default_instance(),
      OpDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, _has_bits_),
      -1,
      -1,
      sizeof(OpDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc, _internal_metadata_));
  OpDesc_Attr_descriptor_ = OpDesc_descriptor_->nested_type(0);
  static const int OpDesc_Attr_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, ints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, floats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, bools_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, block_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, l_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, blocks_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, longs_),
  };
  OpDesc_Attr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpDesc_Attr_descriptor_,
      OpDesc_Attr::internal_default_instance(),
      OpDesc_Attr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, _has_bits_),
      -1,
      -1,
      sizeof(OpDesc_Attr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Attr, _internal_metadata_));
  OpDesc_Var_descriptor_ = OpDesc_descriptor_->nested_type(1);
  static const int OpDesc_Var_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Var, parameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Var, arguments_),
  };
  OpDesc_Var_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpDesc_Var_descriptor_,
      OpDesc_Var::internal_default_instance(),
      OpDesc_Var_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Var, _has_bits_),
      -1,
      -1,
      sizeof(OpDesc_Var),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpDesc_Var, _internal_metadata_));
  OpProto_descriptor_ = file->message_type(2);
  static const int OpProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, outputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, comment_),
  };
  OpProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpProto_descriptor_,
      OpProto::internal_default_instance(),
      OpProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, _has_bits_),
      -1,
      -1,
      sizeof(OpProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto, _internal_metadata_));
  OpProto_Var_descriptor_ = OpProto_descriptor_->nested_type(0);
  static const int OpProto_Var_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, comment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, duplicable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, intermediate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, dispensable_),
  };
  OpProto_Var_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpProto_Var_descriptor_,
      OpProto_Var::internal_default_instance(),
      OpProto_Var_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, _has_bits_),
      -1,
      -1,
      sizeof(OpProto_Var),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Var, _internal_metadata_));
  OpProto_Attr_descriptor_ = OpProto_descriptor_->nested_type(1);
  static const int OpProto_Attr_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, comment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, generated_),
  };
  OpProto_Attr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpProto_Attr_descriptor_,
      OpProto_Attr::internal_default_instance(),
      OpProto_Attr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, _has_bits_),
      -1,
      -1,
      sizeof(OpProto_Attr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpProto_Attr, _internal_metadata_));
  VarType_descriptor_ = file->message_type(3);
  static const int VarType_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, selected_rows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, lod_tensor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, tensor_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, reader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, tuple_),
  };
  VarType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_descriptor_,
      VarType::internal_default_instance(),
      VarType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, _has_bits_),
      -1,
      -1,
      sizeof(VarType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType, _internal_metadata_));
  VarType_TensorDesc_descriptor_ = VarType_descriptor_->nested_type(0);
  static const int VarType_TensorDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_TensorDesc, data_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_TensorDesc, dims_),
  };
  VarType_TensorDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_TensorDesc_descriptor_,
      VarType_TensorDesc::internal_default_instance(),
      VarType_TensorDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_TensorDesc, _has_bits_),
      -1,
      -1,
      sizeof(VarType_TensorDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_TensorDesc, _internal_metadata_));
  VarType_LoDTensorDesc_descriptor_ = VarType_descriptor_->nested_type(1);
  static const int VarType_LoDTensorDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorDesc, tensor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorDesc, lod_level_),
  };
  VarType_LoDTensorDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_LoDTensorDesc_descriptor_,
      VarType_LoDTensorDesc::internal_default_instance(),
      VarType_LoDTensorDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorDesc, _has_bits_),
      -1,
      -1,
      sizeof(VarType_LoDTensorDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorDesc, _internal_metadata_));
  VarType_LoDTensorArrayDesc_descriptor_ = VarType_descriptor_->nested_type(2);
  static const int VarType_LoDTensorArrayDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorArrayDesc, tensor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorArrayDesc, lod_level_),
  };
  VarType_LoDTensorArrayDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_LoDTensorArrayDesc_descriptor_,
      VarType_LoDTensorArrayDesc::internal_default_instance(),
      VarType_LoDTensorArrayDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorArrayDesc, _has_bits_),
      -1,
      -1,
      sizeof(VarType_LoDTensorArrayDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_LoDTensorArrayDesc, _internal_metadata_));
  VarType_ReaderDesc_descriptor_ = VarType_descriptor_->nested_type(3);
  static const int VarType_ReaderDesc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_ReaderDesc, lod_tensor_),
  };
  VarType_ReaderDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_ReaderDesc_descriptor_,
      VarType_ReaderDesc::internal_default_instance(),
      VarType_ReaderDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_ReaderDesc, _has_bits_),
      -1,
      -1,
      sizeof(VarType_ReaderDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_ReaderDesc, _internal_metadata_));
  VarType_Tuple_descriptor_ = VarType_descriptor_->nested_type(4);
  static const int VarType_Tuple_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_Tuple, element_type_),
  };
  VarType_Tuple_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarType_Tuple_descriptor_,
      VarType_Tuple::internal_default_instance(),
      VarType_Tuple_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_Tuple, _has_bits_),
      -1,
      -1,
      sizeof(VarType_Tuple),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarType_Tuple, _internal_metadata_));
  VarType_Type_descriptor_ = VarType_descriptor_->enum_type(0);
  VarDesc_descriptor_ = file->message_type(4);
  static const int VarDesc_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDesc, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDesc, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDesc, persistable_),
  };
  VarDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VarDesc_descriptor_,
      VarDesc::internal_default_instance(),
      VarDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDesc, _has_bits_),
      -1,
      -1,
      sizeof(VarDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VarDesc, _internal_metadata_));
  BlockDesc_descriptor_ = file->message_type(5);
  static const int BlockDesc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, parent_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, vars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, ops_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, forward_block_idx_),
  };
  BlockDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockDesc_descriptor_,
      BlockDesc::internal_default_instance(),
      BlockDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, _has_bits_),
      -1,
      -1,
      sizeof(BlockDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDesc, _internal_metadata_));
  ProgramDesc_descriptor_ = file->message_type(6);
  static const int ProgramDesc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramDesc, blocks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramDesc, version_),
  };
  ProgramDesc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProgramDesc_descriptor_,
      ProgramDesc::internal_default_instance(),
      ProgramDesc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramDesc, _has_bits_),
      -1,
      -1,
      sizeof(ProgramDesc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramDesc, _internal_metadata_));
  AttrType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_framework_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Version_descriptor_, Version::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpDesc_descriptor_, OpDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpDesc_Attr_descriptor_, OpDesc_Attr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpDesc_Var_descriptor_, OpDesc_Var::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpProto_descriptor_, OpProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpProto_Var_descriptor_, OpProto_Var::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpProto_Attr_descriptor_, OpProto_Attr::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_descriptor_, VarType::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_TensorDesc_descriptor_, VarType_TensorDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_LoDTensorDesc_descriptor_, VarType_LoDTensorDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_LoDTensorArrayDesc_descriptor_, VarType_LoDTensorArrayDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_ReaderDesc_descriptor_, VarType_ReaderDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarType_Tuple_descriptor_, VarType_Tuple::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VarDesc_descriptor_, VarDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockDesc_descriptor_, BlockDesc::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProgramDesc_descriptor_, ProgramDesc::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_framework_2eproto() {
  Version_default_instance_.Shutdown();
  delete Version_reflection_;
  OpDesc_default_instance_.Shutdown();
  delete OpDesc_reflection_;
  OpDesc_Attr_default_instance_.Shutdown();
  delete OpDesc_Attr_reflection_;
  OpDesc_Var_default_instance_.Shutdown();
  delete OpDesc_Var_reflection_;
  OpProto_default_instance_.Shutdown();
  delete OpProto_reflection_;
  OpProto_Var_default_instance_.Shutdown();
  delete OpProto_Var_reflection_;
  OpProto_Attr_default_instance_.Shutdown();
  delete OpProto_Attr_reflection_;
  VarType_default_instance_.Shutdown();
  delete VarType_reflection_;
  VarType_TensorDesc_default_instance_.Shutdown();
  delete VarType_TensorDesc_reflection_;
  VarType_LoDTensorDesc_default_instance_.Shutdown();
  delete VarType_LoDTensorDesc_reflection_;
  VarType_LoDTensorArrayDesc_default_instance_.Shutdown();
  delete VarType_LoDTensorArrayDesc_reflection_;
  VarType_ReaderDesc_default_instance_.Shutdown();
  delete VarType_ReaderDesc_reflection_;
  VarType_Tuple_default_instance_.Shutdown();
  delete VarType_Tuple_reflection_;
  VarDesc_default_instance_.Shutdown();
  delete VarDesc_reflection_;
  BlockDesc_default_instance_.Shutdown();
  delete BlockDesc_reflection_;
  ProgramDesc_default_instance_.Shutdown();
  delete ProgramDesc_reflection_;
}

void protobuf_InitDefaults_framework_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Version_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpDesc_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpDesc_Attr_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpDesc_Var_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpProto_Var_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpProto_Attr_default_instance_.DefaultConstruct();
  VarType_default_instance_.DefaultConstruct();
  VarType_TensorDesc_default_instance_.DefaultConstruct();
  VarType_LoDTensorDesc_default_instance_.DefaultConstruct();
  VarType_LoDTensorArrayDesc_default_instance_.DefaultConstruct();
  VarType_ReaderDesc_default_instance_.DefaultConstruct();
  VarType_Tuple_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  VarDesc_default_instance_.DefaultConstruct();
  BlockDesc_default_instance_.DefaultConstruct();
  ProgramDesc_default_instance_.DefaultConstruct();
  Version_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpDesc_Attr_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpDesc_Var_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpProto_Var_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpProto_Attr_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_TensorDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_LoDTensorDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_LoDTensorArrayDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_ReaderDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarType_Tuple_default_instance_.get_mutable()->InitAsDefaultInstance();
  VarDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  BlockDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
  ProgramDesc_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_framework_2eproto_once_);
void protobuf_InitDefaults_framework_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_framework_2eproto_once_,
                 &protobuf_InitDefaults_framework_2eproto_impl);
}
void protobuf_AddDesc_framework_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_framework_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017framework.proto\022\026paddle.framework.prot"
    "o\"\035\n\007Version\022\022\n\007version\030\001 \001(\003:\0010\"\354\003\n\006OpD"
    "esc\022\014\n\004type\030\003 \002(\t\0222\n\006inputs\030\001 \003(\0132\".padd"
    "le.framework.proto.OpDesc.Var\0223\n\007outputs"
    "\030\002 \003(\0132\".paddle.framework.proto.OpDesc.V"
    "ar\0222\n\005attrs\030\004 \003(\0132#.paddle.framework.pro"
    "to.OpDesc.Attr\022\030\n\tis_target\030\005 \001(\010:\005false"
    "\032\357\001\n\004Attr\022\014\n\004name\030\001 \002(\t\022.\n\004type\030\002 \002(\0162 ."
    "paddle.framework.proto.AttrType\022\t\n\001i\030\003 \001"
    "(\005\022\t\n\001f\030\004 \001(\002\022\t\n\001s\030\005 \001(\t\022\014\n\004ints\030\006 \003(\005\022\016"
    "\n\006floats\030\007 \003(\002\022\017\n\007strings\030\010 \003(\t\022\t\n\001b\030\n \001"
    "(\010\022\r\n\005bools\030\013 \003(\010\022\021\n\tblock_idx\030\014 \001(\005\022\t\n\001"
    "l\030\r \001(\003\022\022\n\nblocks_idx\030\016 \003(\005\022\r\n\005longs\030\017 \003"
    "(\003\032+\n\003Var\022\021\n\tparameter\030\001 \002(\t\022\021\n\targument"
    "s\030\002 \003(\t\"\263\003\n\007OpProto\022\014\n\004type\030\001 \002(\t\0223\n\006inp"
    "uts\030\002 \003(\0132#.paddle.framework.proto.OpPro"
    "to.Var\0224\n\007outputs\030\003 \003(\0132#.paddle.framewo"
    "rk.proto.OpProto.Var\0223\n\005attrs\030\004 \003(\0132$.pa"
    "ddle.framework.proto.OpProto.Attr\022\017\n\007com"
    "ment\030\005 \002(\t\032x\n\003Var\022\014\n\004name\030\001 \002(\t\022\017\n\007comme"
    "nt\030\002 \002(\t\022\031\n\nduplicable\030\003 \001(\010:\005false\022\033\n\014i"
    "ntermediate\030\004 \001(\010:\005false\022\032\n\013dispensable\030"
    "\005 \001(\010:\005false\032o\n\004Attr\022\014\n\004name\030\001 \002(\t\022.\n\004ty"
    "pe\030\002 \002(\0162 .paddle.framework.proto.AttrTy"
    "pe\022\017\n\007comment\030\003 \002(\t\022\030\n\tgenerated\030\004 \001(\010:\005"
    "false\"\332\010\n\007VarType\0222\n\004type\030\001 \002(\0162$.paddle"
    ".framework.proto.VarType.Type\022A\n\rselecte"
    "d_rows\030\002 \001(\0132*.paddle.framework.proto.Va"
    "rType.TensorDesc\022A\n\nlod_tensor\030\003 \001(\0132-.p"
    "addle.framework.proto.VarType.LoDTensorD"
    "esc\022H\n\014tensor_array\030\004 \001(\01322.paddle.frame"
    "work.proto.VarType.LoDTensorArrayDesc\022:\n"
    "\006reader\030\005 \001(\0132*.paddle.framework.proto.V"
    "arType.ReaderDesc\0224\n\005tuple\030\007 \001(\0132%.paddl"
    "e.framework.proto.VarType.Tuple\032S\n\nTenso"
    "rDesc\0227\n\tdata_type\030\001 \002(\0162$.paddle.framew"
    "ork.proto.VarType.Type\022\014\n\004dims\030\002 \003(\003\032a\n\r"
    "LoDTensorDesc\022:\n\006tensor\030\001 \002(\0132*.paddle.f"
    "ramework.proto.VarType.TensorDesc\022\024\n\tlod"
    "_level\030\002 \001(\005:\0010\032f\n\022LoDTensorArrayDesc\022:\n"
    "\006tensor\030\001 \002(\0132*.paddle.framework.proto.V"
    "arType.TensorDesc\022\024\n\tlod_level\030\002 \001(\005:\0010\032"
    "O\n\nReaderDesc\022A\n\nlod_tensor\030\001 \003(\0132-.padd"
    "le.framework.proto.VarType.LoDTensorDesc"
    "\032C\n\005Tuple\022:\n\014element_type\030\001 \003(\0162$.paddle"
    ".framework.proto.VarType.Type\"\242\002\n\004Type\022\010"
    "\n\004BOOL\020\000\022\t\n\005INT16\020\001\022\t\n\005INT32\020\002\022\t\n\005INT64\020"
    "\003\022\010\n\004FP16\020\004\022\010\n\004FP32\020\005\022\010\n\004FP64\020\006\022\n\n\006SIZE_"
    "T\020\023\022\t\n\005UINT8\020\024\022\010\n\004INT8\020\025\022\016\n\nLOD_TENSOR\020\007"
    "\022\021\n\rSELECTED_ROWS\020\010\022\022\n\016FEED_MINIBATCH\020\t\022"
    "\016\n\nFETCH_LIST\020\n\022\017\n\013STEP_SCOPES\020\013\022\022\n\016LOD_"
    "RANK_TABLE\020\014\022\024\n\020LOD_TENSOR_ARRAY\020\r\022\016\n\nPL"
    "ACE_LIST\020\016\022\n\n\006READER\020\017\022\007\n\003RAW\020\021\022\t\n\005TUPLE"
    "\020\022\"b\n\007VarDesc\022\014\n\004name\030\001 \002(\t\022-\n\004type\030\002 \002("
    "\0132\037.paddle.framework.proto.VarType\022\032\n\013pe"
    "rsistable\030\003 \001(\010:\005false\"\247\001\n\tBlockDesc\022\013\n\003"
    "idx\030\001 \002(\005\022\022\n\nparent_idx\030\002 \002(\005\022-\n\004vars\030\003 "
    "\003(\0132\037.paddle.framework.proto.VarDesc\022+\n\003"
    "ops\030\004 \003(\0132\036.paddle.framework.proto.OpDes"
    "c\022\035\n\021forward_block_idx\030\005 \001(\005:\002-1\"r\n\013Prog"
    "ramDesc\0221\n\006blocks\030\001 \003(\0132!.paddle.framewo"
    "rk.proto.BlockDesc\0220\n\007version\030\002 \001(\0132\037.pa"
    "ddle.framework.proto.Version*\224\001\n\010AttrTyp"
    "e\022\007\n\003INT\020\000\022\t\n\005FLOAT\020\001\022\n\n\006STRING\020\002\022\010\n\004INT"
    "S\020\003\022\n\n\006FLOATS\020\004\022\013\n\007STRINGS\020\005\022\013\n\007BOOLEAN\020"
    "\006\022\014\n\010BOOLEANS\020\007\022\t\n\005BLOCK\020\010\022\010\n\004LONG\020\t\022\n\n\006"
    "BLOCKS\020\n\022\t\n\005LONGS\020\013", 2659);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "framework.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_framework_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_framework_2eproto_once_);
void protobuf_AddDesc_framework_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_framework_2eproto_once_,
                 &protobuf_AddDesc_framework_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_framework_2eproto {
  StaticDescriptorInitializer_framework_2eproto() {
    protobuf_AddDesc_framework_2eproto();
  }
} static_descriptor_initializer_framework_2eproto_;
const ::google::protobuf::EnumDescriptor* AttrType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttrType_descriptor_;
}
bool AttrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.Version)
}

void Version::InitAsDefaultInstance() {
}

Version::Version(const Version& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.Version)
}

void Version::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_LONGLONG(0);
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.Version)
  SharedDtor();
}

void Version::SharedDtor() {
}

void Version::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Version::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Version_descriptor_;
}

const Version& Version::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Version> Version_default_instance_;

Version* Version::New(::google::protobuf::Arena* arena) const {
  Version* n = new Version;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.Version)
  version_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.Version)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 version = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.Version)
  // optional int64 version = 1 [default = 0];
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.Version)
}

::google::protobuf::uint8* Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.Version)
  // optional int64 version = 1 [default = 0];
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.Version)
  size_t total_size = 0;

  // optional int64 version = 1 [default = 0];
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.Version)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.Version)
    UnsafeMergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.Version)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Version::UnsafeMergeFrom(const Version& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.Version)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Version::IsInitialized() const {

  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Version::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Version_descriptor_;
  metadata.reflection = Version_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Version

// optional int64 version = 1 [default = 0];
bool Version::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Version::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void Version::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void Version::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
::google::protobuf::int64 Version::version() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.Version.version)
  return version_;
}
void Version::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.Version.version)
}

inline const Version* Version::internal_default_instance() {
  return &Version_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Attr::kNameFieldNumber;
const int OpDesc_Attr::kTypeFieldNumber;
const int OpDesc_Attr::kIFieldNumber;
const int OpDesc_Attr::kFFieldNumber;
const int OpDesc_Attr::kSFieldNumber;
const int OpDesc_Attr::kIntsFieldNumber;
const int OpDesc_Attr::kFloatsFieldNumber;
const int OpDesc_Attr::kStringsFieldNumber;
const int OpDesc_Attr::kBFieldNumber;
const int OpDesc_Attr::kBoolsFieldNumber;
const int OpDesc_Attr::kBlockIdxFieldNumber;
const int OpDesc_Attr::kLFieldNumber;
const int OpDesc_Attr::kBlocksIdxFieldNumber;
const int OpDesc_Attr::kLongsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Attr::OpDesc_Attr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc.Attr)
}

void OpDesc_Attr::InitAsDefaultInstance() {
}

OpDesc_Attr::OpDesc_Attr(const OpDesc_Attr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc.Attr)
}

void OpDesc_Attr::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&block_idx_) -
    reinterpret_cast<char*>(&type_) + sizeof(block_idx_));
}

OpDesc_Attr::~OpDesc_Attr() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc.Attr)
  SharedDtor();
}

void OpDesc_Attr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpDesc_Attr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpDesc_Attr_descriptor_;
}

const OpDesc_Attr& OpDesc_Attr::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Attr> OpDesc_Attr_default_instance_;

OpDesc_Attr* OpDesc_Attr::New(::google::protobuf::Arena* arena) const {
  OpDesc_Attr* n = new OpDesc_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc.Attr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OpDesc_Attr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OpDesc_Attr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(type_, f_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_s()) {
      s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(b_, block_idx_);

#undef ZR_HELPER_
#undef ZR_

  ints_.Clear();
  floats_.Clear();
  strings_.Clear();
  bools_.Clear();
  blocks_idx_.Clear();
  longs_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpDesc_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc.Attr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.Attr.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .paddle.framework.proto.AttrType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::AttrType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_i;
        break;
      }

      // optional int32 i = 3;
      case 3: {
        if (tag == 24) {
         parse_i:
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_f;
        break;
      }

      // optional float f = 4;
      case 4: {
        if (tag == 37) {
         parse_f:
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_s;
        break;
      }

      // optional string s = 5;
      case 5: {
        if (tag == 42) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s().data(), this->s().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.Attr.s");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ints;
        break;
      }

      // repeated int32 ints = 6;
      case 6: {
        if (tag == 48) {
         parse_ints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_ints())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ints;
        if (input->ExpectTag(61)) goto parse_floats;
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (tag == 61) {
         parse_floats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61, input, this->mutable_floats())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_floats;
        if (input->ExpectTag(66)) goto parse_strings;
        break;
      }

      // repeated string strings = 8;
      case 8: {
        if (tag == 66) {
         parse_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strings(this->strings_size() - 1).data(),
            this->strings(this->strings_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.Attr.strings");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_strings;
        if (input->ExpectTag(80)) goto parse_b;
        break;
      }

      // optional bool b = 10;
      case 10: {
        if (tag == 80) {
         parse_b:
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_bools;
        break;
      }

      // repeated bool bools = 11;
      case 11: {
        if (tag == 88) {
         parse_bools:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 88, input, this->mutable_bools())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bools())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_bools;
        if (input->ExpectTag(96)) goto parse_block_idx;
        break;
      }

      // optional int32 block_idx = 12;
      case 12: {
        if (tag == 96) {
         parse_block_idx:
          set_has_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_l;
        break;
      }

      // optional int64 l = 13;
      case 13: {
        if (tag == 104) {
         parse_l:
          set_has_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &l_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_blocks_idx;
        break;
      }

      // repeated int32 blocks_idx = 14;
      case 14: {
        if (tag == 112) {
         parse_blocks_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 112, input, this->mutable_blocks_idx())));
        } else if (tag == 114) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_blocks_idx())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_blocks_idx;
        if (input->ExpectTag(120)) goto parse_longs;
        break;
      }

      // repeated int64 longs = 15;
      case 15: {
        if (tag == 120) {
         parse_longs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 120, input, this->mutable_longs())));
        } else if (tag == 122) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_longs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_longs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc.Attr)
  return false;
#undef DO_
}

void OpDesc_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc.Attr)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional int32 i = 3;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i(), output);
  }

  // optional float f = 4;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->f(), output);
  }

  // optional string s = 5;
  if (has_s()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->s(), output);
  }

  // repeated int32 ints = 6;
  for (int i = 0; i < this->ints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->ints(i), output);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->floats(i), output);
  }

  // repeated string strings = 8;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), this->strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->strings(i), output);
  }

  // optional bool b = 10;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->b(), output);
  }

  // repeated bool bools = 11;
  for (int i = 0; i < this->bools_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      11, this->bools(i), output);
  }

  // optional int32 block_idx = 12;
  if (has_block_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->block_idx(), output);
  }

  // optional int64 l = 13;
  if (has_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->l(), output);
  }

  // repeated int32 blocks_idx = 14;
  for (int i = 0; i < this->blocks_idx_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      14, this->blocks_idx(i), output);
  }

  // repeated int64 longs = 15;
  for (int i = 0; i < this->longs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      15, this->longs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc.Attr)
}

::google::protobuf::uint8* OpDesc_Attr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpDesc.Attr)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional int32 i = 3;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->i(), target);
  }

  // optional float f = 4;
  if (has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->f(), target);
  }

  // optional string s = 5;
  if (has_s()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s().data(), this->s().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->s(), target);
  }

  // repeated int32 ints = 6;
  for (int i = 0; i < this->ints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->ints(i), target);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(7, this->floats(i), target);
  }

  // repeated string strings = 8;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strings(i).data(), this->strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Attr.strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->strings(i), target);
  }

  // optional bool b = 10;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->b(), target);
  }

  // repeated bool bools = 11;
  for (int i = 0; i < this->bools_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(11, this->bools(i), target);
  }

  // optional int32 block_idx = 12;
  if (has_block_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->block_idx(), target);
  }

  // optional int64 l = 13;
  if (has_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->l(), target);
  }

  // repeated int32 blocks_idx = 14;
  for (int i = 0; i < this->blocks_idx_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(14, this->blocks_idx(i), target);
  }

  // repeated int64 longs = 15;
  for (int i = 0; i < this->longs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(15, this->longs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpDesc.Attr)
  return target;
}

size_t OpDesc_Attr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t OpDesc_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc.Attr)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional int32 i = 3;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i());
    }

    // optional float f = 4;
    if (has_f()) {
      total_size += 1 + 4;
    }

    // optional string s = 5;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->s());
    }

  }
  if (_has_bits_[8 / 32] & 3328u) {
    // optional bool b = 10;
    if (has_b()) {
      total_size += 1 + 1;
    }

    // optional int32 block_idx = 12;
    if (has_block_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->block_idx());
    }

    // optional int64 l = 13;
    if (has_l()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->l());
    }

  }
  // repeated int32 ints = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->ints_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ints(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ints_size());
    total_size += data_size;
  }

  // repeated float floats = 7;
  {
    size_t data_size = 0;
    unsigned int count = this->floats_size();
    data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->floats_size());
    total_size += data_size;
  }

  // repeated string strings = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0; i < this->strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strings(i));
  }

  // repeated bool bools = 11;
  {
    size_t data_size = 0;
    unsigned int count = this->bools_size();
    data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bools_size());
    total_size += data_size;
  }

  // repeated int32 blocks_idx = 14;
  {
    size_t data_size = 0;
    unsigned int count = this->blocks_idx_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->blocks_idx(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->blocks_idx_size());
    total_size += data_size;
  }

  // repeated int64 longs = 15;
  {
    size_t data_size = 0;
    unsigned int count = this->longs_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->longs(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->longs_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc_Attr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpDesc.Attr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpDesc_Attr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpDesc_Attr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpDesc.Attr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpDesc.Attr)
    UnsafeMergeFrom(*source);
  }
}

void OpDesc_Attr::MergeFrom(const OpDesc_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc.Attr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpDesc_Attr::UnsafeMergeFrom(const OpDesc_Attr& from) {
  GOOGLE_DCHECK(&from != this);
  ints_.UnsafeMergeFrom(from.ints_);
  floats_.UnsafeMergeFrom(from.floats_);
  strings_.UnsafeMergeFrom(from.strings_);
  bools_.UnsafeMergeFrom(from.bools_);
  blocks_idx_.UnsafeMergeFrom(from.blocks_idx_);
  longs_.UnsafeMergeFrom(from.longs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_i()) {
      set_i(from.i());
    }
    if (from.has_f()) {
      set_f(from.f());
    }
    if (from.has_s()) {
      set_has_s();
      s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_b()) {
      set_b(from.b());
    }
    if (from.has_block_idx()) {
      set_block_idx(from.block_idx());
    }
    if (from.has_l()) {
      set_l(from.l());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpDesc_Attr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpDesc.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDesc_Attr::CopyFrom(const OpDesc_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc.Attr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpDesc_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void OpDesc_Attr::Swap(OpDesc_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Attr::InternalSwap(OpDesc_Attr* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(i_, other->i_);
  std::swap(f_, other->f_);
  s_.Swap(&other->s_);
  ints_.UnsafeArenaSwap(&other->ints_);
  floats_.UnsafeArenaSwap(&other->floats_);
  strings_.UnsafeArenaSwap(&other->strings_);
  std::swap(b_, other->b_);
  bools_.UnsafeArenaSwap(&other->bools_);
  std::swap(block_idx_, other->block_idx_);
  std::swap(l_, other->l_);
  blocks_idx_.UnsafeArenaSwap(&other->blocks_idx_);
  longs_.UnsafeArenaSwap(&other->longs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpDesc_Attr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpDesc_Attr_descriptor_;
  metadata.reflection = OpDesc_Attr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc_Var::kParameterFieldNumber;
const int OpDesc_Var::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc_Var::OpDesc_Var()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc.Var)
}

void OpDesc_Var::InitAsDefaultInstance() {
}

OpDesc_Var::OpDesc_Var(const OpDesc_Var& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc.Var)
}

void OpDesc_Var::SharedCtor() {
  _cached_size_ = 0;
  parameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpDesc_Var::~OpDesc_Var() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc.Var)
  SharedDtor();
}

void OpDesc_Var::SharedDtor() {
  parameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc_Var::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpDesc_Var::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpDesc_Var_descriptor_;
}

const OpDesc_Var& OpDesc_Var::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpDesc_Var> OpDesc_Var_default_instance_;

OpDesc_Var* OpDesc_Var::New(::google::protobuf::Arena* arena) const {
  OpDesc_Var* n = new OpDesc_Var;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc_Var::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc.Var)
  if (has_parameter()) {
    parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arguments_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpDesc_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc.Var)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string parameter = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parameter().data(), this->parameter().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.Var.parameter");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arguments;
        break;
      }

      // repeated string arguments = 2;
      case 2: {
        if (tag == 18) {
         parse_arguments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_arguments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arguments(this->arguments_size() - 1).data(),
            this->arguments(this->arguments_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.Var.arguments");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_arguments;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc.Var)
  return false;
#undef DO_
}

void OpDesc_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc.Var)
  // required string parameter = 1;
  if (has_parameter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameter().data(), this->parameter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Var.parameter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parameter(), output);
  }

  // repeated string arguments = 2;
  for (int i = 0; i < this->arguments_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arguments(i).data(), this->arguments(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Var.arguments");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->arguments(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc.Var)
}

::google::protobuf::uint8* OpDesc_Var::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpDesc.Var)
  // required string parameter = 1;
  if (has_parameter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parameter().data(), this->parameter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Var.parameter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parameter(), target);
  }

  // repeated string arguments = 2;
  for (int i = 0; i < this->arguments_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arguments(i).data(), this->arguments(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.Var.arguments");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->arguments(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpDesc.Var)
  return target;
}

size_t OpDesc_Var::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc.Var)
  size_t total_size = 0;

  // required string parameter = 1;
  if (has_parameter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter());
  }
  // repeated string arguments = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->arguments_size());
  for (int i = 0; i < this->arguments_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->arguments(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc_Var::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpDesc.Var)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpDesc_Var* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpDesc_Var>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpDesc.Var)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpDesc.Var)
    UnsafeMergeFrom(*source);
  }
}

void OpDesc_Var::MergeFrom(const OpDesc_Var& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc.Var)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpDesc_Var::UnsafeMergeFrom(const OpDesc_Var& from) {
  GOOGLE_DCHECK(&from != this);
  arguments_.UnsafeMergeFrom(from.arguments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_parameter()) {
      set_has_parameter();
      parameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpDesc_Var::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpDesc.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDesc_Var::CopyFrom(const OpDesc_Var& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc.Var)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpDesc_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OpDesc_Var::Swap(OpDesc_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc_Var::InternalSwap(OpDesc_Var* other) {
  parameter_.Swap(&other->parameter_);
  arguments_.UnsafeArenaSwap(&other->arguments_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpDesc_Var::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpDesc_Var_descriptor_;
  metadata.reflection = OpDesc_Var_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpDesc::kTypeFieldNumber;
const int OpDesc::kInputsFieldNumber;
const int OpDesc::kOutputsFieldNumber;
const int OpDesc::kAttrsFieldNumber;
const int OpDesc::kIsTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpDesc::OpDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpDesc)
}

void OpDesc::InitAsDefaultInstance() {
}

OpDesc::OpDesc(const OpDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpDesc)
}

void OpDesc::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_target_ = false;
}

OpDesc::~OpDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpDesc)
  SharedDtor();
}

void OpDesc::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpDesc_descriptor_;
}

const OpDesc& OpDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpDesc> OpDesc_default_instance_;

OpDesc* OpDesc::New(::google::protobuf::Arena* arena) const {
  OpDesc* n = new OpDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpDesc)
  if (_has_bits_[0 / 32] & 17u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    is_target_ = false;
  }
  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_inputs;
        if (input->ExpectTag(18)) goto parse_loop_outputs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_outputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_outputs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // required string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpDesc.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_attrs;
        break;
      }

      // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
      case 4: {
        if (tag == 34) {
         parse_attrs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_is_target;
        break;
      }

      // optional bool is_target = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_is_target:
          set_has_is_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_target_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpDesc)
  return false;
#undef DO_
}

void OpDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpDesc)
  // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inputs(i), output);
  }

  // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->outputs(i), output);
  }

  // required string type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attrs(i), output);
  }

  // optional bool is_target = 5 [default = false];
  if (has_is_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpDesc)
}

::google::protobuf::uint8* OpDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpDesc)
  // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->inputs(i), false, target);
  }

  // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->outputs(i), false, target);
  }

  // required string type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpDesc.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->attrs(i), false, target);
  }

  // optional bool is_target = 5 [default = false];
  if (has_is_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpDesc)
  return target;
}

size_t OpDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpDesc)
  size_t total_size = 0;

  // required string type = 3;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  // optional bool is_target = 5 [default = false];
  if (has_is_target()) {
    total_size += 1 + 1;
  }

  // repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  // repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
  {
    unsigned int count = this->attrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpDesc)
    UnsafeMergeFrom(*source);
  }
}

void OpDesc::MergeFrom(const OpDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpDesc::UnsafeMergeFrom(const OpDesc& from) {
  GOOGLE_DCHECK(&from != this);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_is_target()) {
      set_is_target(from.is_target());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpDesc::CopyFrom(const OpDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs())) return false;
  return true;
}

void OpDesc::Swap(OpDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpDesc::InternalSwap(OpDesc* other) {
  type_.Swap(&other->type_);
  inputs_.UnsafeArenaSwap(&other->inputs_);
  outputs_.UnsafeArenaSwap(&other->outputs_);
  attrs_.UnsafeArenaSwap(&other->attrs_);
  std::swap(is_target_, other->is_target_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpDesc_descriptor_;
  metadata.reflection = OpDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpDesc_Attr

// required string name = 1;
bool OpDesc_Attr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpDesc_Attr::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void OpDesc_Attr::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpDesc_Attr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpDesc_Attr::name() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.name)
}
void OpDesc_Attr::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.Attr.name)
}
void OpDesc_Attr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.Attr.name)
}
::std::string* OpDesc_Attr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.Attr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Attr::release_name() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpDesc.Attr.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpDesc.Attr.name)
}

// required .paddle.framework.proto.AttrType type = 2;
bool OpDesc_Attr::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpDesc_Attr::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void OpDesc_Attr::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpDesc_Attr::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle::framework::proto::AttrType OpDesc_Attr::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.type)
  return static_cast< ::paddle::framework::proto::AttrType >(type_);
}
void OpDesc_Attr::set_type(::paddle::framework::proto::AttrType value) {
  assert(::paddle::framework::proto::AttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.type)
}

// optional int32 i = 3;
bool OpDesc_Attr::has_i() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpDesc_Attr::set_has_i() {
  _has_bits_[0] |= 0x00000004u;
}
void OpDesc_Attr::clear_has_i() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpDesc_Attr::clear_i() {
  i_ = 0;
  clear_has_i();
}
::google::protobuf::int32 OpDesc_Attr::i() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.i)
  return i_;
}
void OpDesc_Attr::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.i)
}

// optional float f = 4;
bool OpDesc_Attr::has_f() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpDesc_Attr::set_has_f() {
  _has_bits_[0] |= 0x00000008u;
}
void OpDesc_Attr::clear_has_f() {
  _has_bits_[0] &= ~0x00000008u;
}
void OpDesc_Attr::clear_f() {
  f_ = 0;
  clear_has_f();
}
float OpDesc_Attr::f() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.f)
  return f_;
}
void OpDesc_Attr::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.f)
}

// optional string s = 5;
bool OpDesc_Attr::has_s() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpDesc_Attr::set_has_s() {
  _has_bits_[0] |= 0x00000010u;
}
void OpDesc_Attr::clear_has_s() {
  _has_bits_[0] &= ~0x00000010u;
}
void OpDesc_Attr::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
const ::std::string& OpDesc_Attr::s() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.s)
}
void OpDesc_Attr::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.Attr.s)
}
void OpDesc_Attr::set_s(const char* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.Attr.s)
}
::std::string* OpDesc_Attr::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.Attr.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Attr::release_s() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpDesc.Attr.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Attr::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpDesc.Attr.s)
}

// repeated int32 ints = 6;
int OpDesc_Attr::ints_size() const {
  return ints_.size();
}
void OpDesc_Attr::clear_ints() {
  ints_.Clear();
}
::google::protobuf::int32 OpDesc_Attr::ints(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.ints)
  return ints_.Get(index);
}
void OpDesc_Attr::set_ints(int index, ::google::protobuf::int32 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.ints)
}
void OpDesc_Attr::add_ints(::google::protobuf::int32 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.ints)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OpDesc_Attr::ints() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.ints)
  return ints_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OpDesc_Attr::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.ints)
  return &ints_;
}

// repeated float floats = 7;
int OpDesc_Attr::floats_size() const {
  return floats_.size();
}
void OpDesc_Attr::clear_floats() {
  floats_.Clear();
}
float OpDesc_Attr::floats(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.floats)
  return floats_.Get(index);
}
void OpDesc_Attr::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.floats)
}
void OpDesc_Attr::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.floats)
}
const ::google::protobuf::RepeatedField< float >&
OpDesc_Attr::floats() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.floats)
  return floats_;
}
::google::protobuf::RepeatedField< float >*
OpDesc_Attr::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.floats)
  return &floats_;
}

// repeated string strings = 8;
int OpDesc_Attr::strings_size() const {
  return strings_.size();
}
void OpDesc_Attr::clear_strings() {
  strings_.Clear();
}
const ::std::string& OpDesc_Attr::strings(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.strings)
  return strings_.Get(index);
}
::std::string* OpDesc_Attr::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.Attr.strings)
  return strings_.Mutable(index);
}
void OpDesc_Attr::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.strings)
  strings_.Mutable(index)->assign(value);
}
void OpDesc_Attr::set_strings(int index, const char* value) {
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.Attr.strings)
}
void OpDesc_Attr::set_strings(int index, const char* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.Attr.strings)
}
::std::string* OpDesc_Attr::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:paddle.framework.proto.OpDesc.Attr.strings)
  return strings_.Add();
}
void OpDesc_Attr::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.strings)
}
void OpDesc_Attr::add_strings(const char* value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:paddle.framework.proto.OpDesc.Attr.strings)
}
void OpDesc_Attr::add_strings(const char* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:paddle.framework.proto.OpDesc.Attr.strings)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
OpDesc_Attr::strings() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.strings)
  return strings_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
OpDesc_Attr::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.strings)
  return &strings_;
}

// optional bool b = 10;
bool OpDesc_Attr::has_b() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void OpDesc_Attr::set_has_b() {
  _has_bits_[0] |= 0x00000100u;
}
void OpDesc_Attr::clear_has_b() {
  _has_bits_[0] &= ~0x00000100u;
}
void OpDesc_Attr::clear_b() {
  b_ = false;
  clear_has_b();
}
bool OpDesc_Attr::b() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.b)
  return b_;
}
void OpDesc_Attr::set_b(bool value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.b)
}

// repeated bool bools = 11;
int OpDesc_Attr::bools_size() const {
  return bools_.size();
}
void OpDesc_Attr::clear_bools() {
  bools_.Clear();
}
bool OpDesc_Attr::bools(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.bools)
  return bools_.Get(index);
}
void OpDesc_Attr::set_bools(int index, bool value) {
  bools_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.bools)
}
void OpDesc_Attr::add_bools(bool value) {
  bools_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.bools)
}
const ::google::protobuf::RepeatedField< bool >&
OpDesc_Attr::bools() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.bools)
  return bools_;
}
::google::protobuf::RepeatedField< bool >*
OpDesc_Attr::mutable_bools() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.bools)
  return &bools_;
}

// optional int32 block_idx = 12;
bool OpDesc_Attr::has_block_idx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void OpDesc_Attr::set_has_block_idx() {
  _has_bits_[0] |= 0x00000400u;
}
void OpDesc_Attr::clear_has_block_idx() {
  _has_bits_[0] &= ~0x00000400u;
}
void OpDesc_Attr::clear_block_idx() {
  block_idx_ = 0;
  clear_has_block_idx();
}
::google::protobuf::int32 OpDesc_Attr::block_idx() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.block_idx)
  return block_idx_;
}
void OpDesc_Attr::set_block_idx(::google::protobuf::int32 value) {
  set_has_block_idx();
  block_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.block_idx)
}

// optional int64 l = 13;
bool OpDesc_Attr::has_l() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void OpDesc_Attr::set_has_l() {
  _has_bits_[0] |= 0x00000800u;
}
void OpDesc_Attr::clear_has_l() {
  _has_bits_[0] &= ~0x00000800u;
}
void OpDesc_Attr::clear_l() {
  l_ = GOOGLE_LONGLONG(0);
  clear_has_l();
}
::google::protobuf::int64 OpDesc_Attr::l() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.l)
  return l_;
}
void OpDesc_Attr::set_l(::google::protobuf::int64 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.l)
}

// repeated int32 blocks_idx = 14;
int OpDesc_Attr::blocks_idx_size() const {
  return blocks_idx_.size();
}
void OpDesc_Attr::clear_blocks_idx() {
  blocks_idx_.Clear();
}
::google::protobuf::int32 OpDesc_Attr::blocks_idx(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.blocks_idx)
  return blocks_idx_.Get(index);
}
void OpDesc_Attr::set_blocks_idx(int index, ::google::protobuf::int32 value) {
  blocks_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.blocks_idx)
}
void OpDesc_Attr::add_blocks_idx(::google::protobuf::int32 value) {
  blocks_idx_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.blocks_idx)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OpDesc_Attr::blocks_idx() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.blocks_idx)
  return blocks_idx_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OpDesc_Attr::mutable_blocks_idx() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.blocks_idx)
  return &blocks_idx_;
}

// repeated int64 longs = 15;
int OpDesc_Attr::longs_size() const {
  return longs_.size();
}
void OpDesc_Attr::clear_longs() {
  longs_.Clear();
}
::google::protobuf::int64 OpDesc_Attr::longs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Attr.longs)
  return longs_.Get(index);
}
void OpDesc_Attr::set_longs(int index, ::google::protobuf::int64 value) {
  longs_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Attr.longs)
}
void OpDesc_Attr::add_longs(::google::protobuf::int64 value) {
  longs_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Attr.longs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OpDesc_Attr::longs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Attr.longs)
  return longs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OpDesc_Attr::mutable_longs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Attr.longs)
  return &longs_;
}

inline const OpDesc_Attr* OpDesc_Attr::internal_default_instance() {
  return &OpDesc_Attr_default_instance_.get();
}
// -------------------------------------------------------------------

// OpDesc_Var

// required string parameter = 1;
bool OpDesc_Var::has_parameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpDesc_Var::set_has_parameter() {
  _has_bits_[0] |= 0x00000001u;
}
void OpDesc_Var::clear_has_parameter() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpDesc_Var::clear_parameter() {
  parameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parameter();
}
const ::std::string& OpDesc_Var::parameter() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Var.parameter)
  return parameter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Var::set_parameter(const ::std::string& value) {
  set_has_parameter();
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Var.parameter)
}
void OpDesc_Var::set_parameter(const char* value) {
  set_has_parameter();
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.Var.parameter)
}
void OpDesc_Var::set_parameter(const char* value, size_t size) {
  set_has_parameter();
  parameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.Var.parameter)
}
::std::string* OpDesc_Var::mutable_parameter() {
  set_has_parameter();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.Var.parameter)
  return parameter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc_Var::release_parameter() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpDesc.Var.parameter)
  clear_has_parameter();
  return parameter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc_Var::set_allocated_parameter(::std::string* parameter) {
  if (parameter != NULL) {
    set_has_parameter();
  } else {
    clear_has_parameter();
  }
  parameter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parameter);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpDesc.Var.parameter)
}

// repeated string arguments = 2;
int OpDesc_Var::arguments_size() const {
  return arguments_.size();
}
void OpDesc_Var::clear_arguments() {
  arguments_.Clear();
}
const ::std::string& OpDesc_Var::arguments(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.Var.arguments)
  return arguments_.Get(index);
}
::std::string* OpDesc_Var::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.Var.arguments)
  return arguments_.Mutable(index);
}
void OpDesc_Var::set_arguments(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.Var.arguments)
  arguments_.Mutable(index)->assign(value);
}
void OpDesc_Var::set_arguments(int index, const char* value) {
  arguments_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.Var.arguments)
}
void OpDesc_Var::set_arguments(int index, const char* value, size_t size) {
  arguments_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.Var.arguments)
}
::std::string* OpDesc_Var::add_arguments() {
  // @@protoc_insertion_point(field_add_mutable:paddle.framework.proto.OpDesc.Var.arguments)
  return arguments_.Add();
}
void OpDesc_Var::add_arguments(const ::std::string& value) {
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.Var.arguments)
}
void OpDesc_Var::add_arguments(const char* value) {
  arguments_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:paddle.framework.proto.OpDesc.Var.arguments)
}
void OpDesc_Var::add_arguments(const char* value, size_t size) {
  arguments_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:paddle.framework.proto.OpDesc.Var.arguments)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
OpDesc_Var::arguments() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.Var.arguments)
  return arguments_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
OpDesc_Var::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.Var.arguments)
  return &arguments_;
}

inline const OpDesc_Var* OpDesc_Var::internal_default_instance() {
  return &OpDesc_Var_default_instance_.get();
}
// -------------------------------------------------------------------

// OpDesc

// required string type = 3;
bool OpDesc::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpDesc::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OpDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpDesc::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& OpDesc::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.type)
}
void OpDesc::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpDesc.type)
}
void OpDesc::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpDesc.type)
}
::std::string* OpDesc::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpDesc::release_type() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpDesc.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpDesc::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpDesc.type)
}

// repeated .paddle.framework.proto.OpDesc.Var inputs = 1;
int OpDesc::inputs_size() const {
  return inputs_.size();
}
void OpDesc::clear_inputs() {
  inputs_.Clear();
}
const ::paddle::framework::proto::OpDesc_Var& OpDesc::inputs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.inputs)
  return inputs_.Get(index);
}
::paddle::framework::proto::OpDesc_Var* OpDesc::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.inputs)
  return inputs_.Mutable(index);
}
::paddle::framework::proto::OpDesc_Var* OpDesc::add_inputs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Var >*
OpDesc::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Var >&
OpDesc::inputs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.inputs)
  return inputs_;
}

// repeated .paddle.framework.proto.OpDesc.Var outputs = 2;
int OpDesc::outputs_size() const {
  return outputs_.size();
}
void OpDesc::clear_outputs() {
  outputs_.Clear();
}
const ::paddle::framework::proto::OpDesc_Var& OpDesc::outputs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.outputs)
  return outputs_.Get(index);
}
::paddle::framework::proto::OpDesc_Var* OpDesc::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.outputs)
  return outputs_.Mutable(index);
}
::paddle::framework::proto::OpDesc_Var* OpDesc::add_outputs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Var >*
OpDesc::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Var >&
OpDesc::outputs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.outputs)
  return outputs_;
}

// repeated .paddle.framework.proto.OpDesc.Attr attrs = 4;
int OpDesc::attrs_size() const {
  return attrs_.size();
}
void OpDesc::clear_attrs() {
  attrs_.Clear();
}
const ::paddle::framework::proto::OpDesc_Attr& OpDesc::attrs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.attrs)
  return attrs_.Get(index);
}
::paddle::framework::proto::OpDesc_Attr* OpDesc::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpDesc.attrs)
  return attrs_.Mutable(index);
}
::paddle::framework::proto::OpDesc_Attr* OpDesc::add_attrs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpDesc.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Attr >*
OpDesc::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpDesc.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc_Attr >&
OpDesc::attrs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpDesc.attrs)
  return attrs_;
}

// optional bool is_target = 5 [default = false];
bool OpDesc::has_is_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpDesc::set_has_is_target() {
  _has_bits_[0] |= 0x00000010u;
}
void OpDesc::clear_has_is_target() {
  _has_bits_[0] &= ~0x00000010u;
}
void OpDesc::clear_is_target() {
  is_target_ = false;
  clear_has_is_target();
}
bool OpDesc::is_target() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpDesc.is_target)
  return is_target_;
}
void OpDesc::set_is_target(bool value) {
  set_has_is_target();
  is_target_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpDesc.is_target)
}

inline const OpDesc* OpDesc::internal_default_instance() {
  return &OpDesc_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Var::kNameFieldNumber;
const int OpProto_Var::kCommentFieldNumber;
const int OpProto_Var::kDuplicableFieldNumber;
const int OpProto_Var::kIntermediateFieldNumber;
const int OpProto_Var::kDispensableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Var::OpProto_Var()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto.Var)
}

void OpProto_Var::InitAsDefaultInstance() {
}

OpProto_Var::OpProto_Var(const OpProto_Var& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto.Var)
}

void OpProto_Var::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&duplicable_, 0, reinterpret_cast<char*>(&dispensable_) -
    reinterpret_cast<char*>(&duplicable_) + sizeof(dispensable_));
}

OpProto_Var::~OpProto_Var() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto.Var)
  SharedDtor();
}

void OpProto_Var::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Var::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpProto_Var::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpProto_Var_descriptor_;
}

const OpProto_Var& OpProto_Var::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpProto_Var> OpProto_Var_default_instance_;

OpProto_Var* OpProto_Var::New(::google::protobuf::Arena* arena) const {
  OpProto_Var* n = new OpProto_Var;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto_Var::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto.Var)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OpProto_Var, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OpProto_Var*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(duplicable_, dispensable_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_comment()) {
      comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpProto_Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto.Var)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.Var.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_comment;
        break;
      }

      // required string comment = 2;
      case 2: {
        if (tag == 18) {
         parse_comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.Var.comment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_duplicable;
        break;
      }

      // optional bool duplicable = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_duplicable:
          set_has_duplicable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &duplicable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_intermediate;
        break;
      }

      // optional bool intermediate = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_intermediate:
          set_has_intermediate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &intermediate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dispensable;
        break;
      }

      // optional bool dispensable = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_dispensable:
          set_has_dispensable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dispensable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto.Var)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto.Var)
  return false;
#undef DO_
}

void OpProto_Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto.Var)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Var.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string comment = 2;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Var.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->comment(), output);
  }

  // optional bool duplicable = 3 [default = false];
  if (has_duplicable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->duplicable(), output);
  }

  // optional bool intermediate = 4 [default = false];
  if (has_intermediate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->intermediate(), output);
  }

  // optional bool dispensable = 5 [default = false];
  if (has_dispensable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dispensable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto.Var)
}

::google::protobuf::uint8* OpProto_Var::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpProto.Var)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Var.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string comment = 2;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Var.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->comment(), target);
  }

  // optional bool duplicable = 3 [default = false];
  if (has_duplicable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->duplicable(), target);
  }

  // optional bool intermediate = 4 [default = false];
  if (has_intermediate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->intermediate(), target);
  }

  // optional bool dispensable = 5 [default = false];
  if (has_dispensable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dispensable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpProto.Var)
  return target;
}

size_t OpProto_Var::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto.Var)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_comment()) {
    // required string comment = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  return total_size;
}
size_t OpProto_Var::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto.Var)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string comment = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional bool duplicable = 3 [default = false];
    if (has_duplicable()) {
      total_size += 1 + 1;
    }

    // optional bool intermediate = 4 [default = false];
    if (has_intermediate()) {
      total_size += 1 + 1;
    }

    // optional bool dispensable = 5 [default = false];
    if (has_dispensable()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto_Var::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpProto.Var)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpProto_Var* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpProto_Var>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpProto.Var)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpProto.Var)
    UnsafeMergeFrom(*source);
  }
}

void OpProto_Var::MergeFrom(const OpProto_Var& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto.Var)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpProto_Var::UnsafeMergeFrom(const OpProto_Var& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_comment()) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (from.has_duplicable()) {
      set_duplicable(from.duplicable());
    }
    if (from.has_intermediate()) {
      set_intermediate(from.intermediate());
    }
    if (from.has_dispensable()) {
      set_dispensable(from.dispensable());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpProto_Var::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpProto.Var)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpProto_Var::CopyFrom(const OpProto_Var& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto.Var)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpProto_Var::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void OpProto_Var::Swap(OpProto_Var* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Var::InternalSwap(OpProto_Var* other) {
  name_.Swap(&other->name_);
  comment_.Swap(&other->comment_);
  std::swap(duplicable_, other->duplicable_);
  std::swap(intermediate_, other->intermediate_);
  std::swap(dispensable_, other->dispensable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpProto_Var::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpProto_Var_descriptor_;
  metadata.reflection = OpProto_Var_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto_Attr::kNameFieldNumber;
const int OpProto_Attr::kTypeFieldNumber;
const int OpProto_Attr::kCommentFieldNumber;
const int OpProto_Attr::kGeneratedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto_Attr::OpProto_Attr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto.Attr)
}

void OpProto_Attr::InitAsDefaultInstance() {
}

OpProto_Attr::OpProto_Attr(const OpProto_Attr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto.Attr)
}

void OpProto_Attr::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&generated_) -
    reinterpret_cast<char*>(&type_) + sizeof(generated_));
}

OpProto_Attr::~OpProto_Attr() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto.Attr)
  SharedDtor();
}

void OpProto_Attr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpProto_Attr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpProto_Attr_descriptor_;
}

const OpProto_Attr& OpProto_Attr::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpProto_Attr> OpProto_Attr_default_instance_;

OpProto_Attr* OpProto_Attr::New(::google::protobuf::Arena* arena) const {
  OpProto_Attr* n = new OpProto_Attr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto.Attr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OpProto_Attr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OpProto_Attr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(type_, generated_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_comment()) {
      comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpProto_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto.Attr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.Attr.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .paddle.framework.proto.AttrType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::AttrType_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::AttrType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_comment;
        break;
      }

      // required string comment = 3;
      case 3: {
        if (tag == 26) {
         parse_comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.Attr.comment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_generated;
        break;
      }

      // optional bool generated = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_generated:
          set_has_generated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generated_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto.Attr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto.Attr)
  return false;
#undef DO_
}

void OpProto_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto.Attr)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Attr.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required string comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Attr.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->comment(), output);
  }

  // optional bool generated = 4 [default = false];
  if (has_generated()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->generated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto.Attr)
}

::google::protobuf::uint8* OpProto_Attr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpProto.Attr)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Attr.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .paddle.framework.proto.AttrType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required string comment = 3;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.Attr.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->comment(), target);
  }

  // optional bool generated = 4 [default = false];
  if (has_generated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->generated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpProto.Attr)
  return target;
}

size_t OpProto_Attr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_comment()) {
    // required string comment = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  return total_size;
}
size_t OpProto_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto.Attr)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .paddle.framework.proto.AttrType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string comment = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool generated = 4 [default = false];
  if (has_generated()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto_Attr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpProto.Attr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpProto_Attr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpProto_Attr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpProto.Attr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpProto.Attr)
    UnsafeMergeFrom(*source);
  }
}

void OpProto_Attr::MergeFrom(const OpProto_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto.Attr)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpProto_Attr::UnsafeMergeFrom(const OpProto_Attr& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_comment()) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
    if (from.has_generated()) {
      set_generated(from.generated());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpProto_Attr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpProto.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpProto_Attr::CopyFrom(const OpProto_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto.Attr)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpProto_Attr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void OpProto_Attr::Swap(OpProto_Attr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto_Attr::InternalSwap(OpProto_Attr* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  comment_.Swap(&other->comment_);
  std::swap(generated_, other->generated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpProto_Attr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpProto_Attr_descriptor_;
  metadata.reflection = OpProto_Attr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpProto::kTypeFieldNumber;
const int OpProto::kInputsFieldNumber;
const int OpProto::kOutputsFieldNumber;
const int OpProto::kAttrsFieldNumber;
const int OpProto::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpProto::OpProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.OpProto)
}

void OpProto::InitAsDefaultInstance() {
}

OpProto::OpProto(const OpProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.OpProto)
}

void OpProto::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpProto::~OpProto() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.OpProto)
  SharedDtor();
}

void OpProto::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpProto_descriptor_;
}

const OpProto& OpProto::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpProto> OpProto_default_instance_;

OpProto* OpProto::New(::google::protobuf::Arena* arena) const {
  OpProto* n = new OpProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpProto::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.OpProto)
  if (_has_bits_[0 / 32] & 17u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_comment()) {
      comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  inputs_.Clear();
  outputs_.Clear();
  attrs_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.OpProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_inputs;
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
      case 2: {
        if (tag == 18) {
         parse_inputs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_inputs;
        if (input->ExpectTag(26)) goto parse_loop_outputs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_outputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_outputs;
        if (input->ExpectTag(34)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_comment;
        break;
      }

      // required string comment = 5;
      case 5: {
        if (tag == 42) {
         parse_comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.OpProto.comment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.OpProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.OpProto)
  return false;
#undef DO_
}

void OpProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.OpProto)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->inputs(i), output);
  }

  // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->outputs(i), output);
  }

  // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attrs(i), output);
  }

  // required string comment = 5;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->comment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.OpProto)
}

::google::protobuf::uint8* OpProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.OpProto)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->inputs(i), false, target);
  }

  // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->outputs(i), false, target);
  }

  // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->attrs(i), false, target);
  }

  // required string comment = 5;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.OpProto.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->comment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.OpProto)
  return target;
}

size_t OpProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.OpProto)
  size_t total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_comment()) {
    // required string comment = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  return total_size;
}
size_t OpProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.OpProto)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000011) ^ 0x00000011) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string comment = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .paddle.framework.proto.OpProto.Var inputs = 2;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // repeated .paddle.framework.proto.OpProto.Var outputs = 3;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  // repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
  {
    unsigned int count = this->attrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attrs(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.OpProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.OpProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.OpProto)
    UnsafeMergeFrom(*source);
  }
}

void OpProto::MergeFrom(const OpProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.OpProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpProto::UnsafeMergeFrom(const OpProto& from) {
  GOOGLE_DCHECK(&from != this);
  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  attrs_.MergeFrom(from.attrs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_comment()) {
      set_has_comment();
      comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OpProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.OpProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpProto::CopyFrom(const OpProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.OpProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->attrs())) return false;
  return true;
}

void OpProto::Swap(OpProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpProto::InternalSwap(OpProto* other) {
  type_.Swap(&other->type_);
  inputs_.UnsafeArenaSwap(&other->inputs_);
  outputs_.UnsafeArenaSwap(&other->outputs_);
  attrs_.UnsafeArenaSwap(&other->attrs_);
  comment_.Swap(&other->comment_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpProto_descriptor_;
  metadata.reflection = OpProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpProto_Var

// required string name = 1;
bool OpProto_Var::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpProto_Var::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void OpProto_Var::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpProto_Var::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpProto_Var::name() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Var.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Var.name)
}
void OpProto_Var::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.Var.name)
}
void OpProto_Var::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.Var.name)
}
::std::string* OpProto_Var::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.Var.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Var::release_name() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.Var.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.Var.name)
}

// required string comment = 2;
bool OpProto_Var::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpProto_Var::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
void OpProto_Var::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpProto_Var::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto_Var::comment() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Var.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Var.comment)
}
void OpProto_Var::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.Var.comment)
}
void OpProto_Var::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.Var.comment)
}
::std::string* OpProto_Var::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.Var.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Var::release_comment() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.Var.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Var::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.Var.comment)
}

// optional bool duplicable = 3 [default = false];
bool OpProto_Var::has_duplicable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpProto_Var::set_has_duplicable() {
  _has_bits_[0] |= 0x00000004u;
}
void OpProto_Var::clear_has_duplicable() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpProto_Var::clear_duplicable() {
  duplicable_ = false;
  clear_has_duplicable();
}
bool OpProto_Var::duplicable() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Var.duplicable)
  return duplicable_;
}
void OpProto_Var::set_duplicable(bool value) {
  set_has_duplicable();
  duplicable_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Var.duplicable)
}

// optional bool intermediate = 4 [default = false];
bool OpProto_Var::has_intermediate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpProto_Var::set_has_intermediate() {
  _has_bits_[0] |= 0x00000008u;
}
void OpProto_Var::clear_has_intermediate() {
  _has_bits_[0] &= ~0x00000008u;
}
void OpProto_Var::clear_intermediate() {
  intermediate_ = false;
  clear_has_intermediate();
}
bool OpProto_Var::intermediate() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Var.intermediate)
  return intermediate_;
}
void OpProto_Var::set_intermediate(bool value) {
  set_has_intermediate();
  intermediate_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Var.intermediate)
}

// optional bool dispensable = 5 [default = false];
bool OpProto_Var::has_dispensable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpProto_Var::set_has_dispensable() {
  _has_bits_[0] |= 0x00000010u;
}
void OpProto_Var::clear_has_dispensable() {
  _has_bits_[0] &= ~0x00000010u;
}
void OpProto_Var::clear_dispensable() {
  dispensable_ = false;
  clear_has_dispensable();
}
bool OpProto_Var::dispensable() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Var.dispensable)
  return dispensable_;
}
void OpProto_Var::set_dispensable(bool value) {
  set_has_dispensable();
  dispensable_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Var.dispensable)
}

inline const OpProto_Var* OpProto_Var::internal_default_instance() {
  return &OpProto_Var_default_instance_.get();
}
// -------------------------------------------------------------------

// OpProto_Attr

// required string name = 1;
bool OpProto_Attr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpProto_Attr::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void OpProto_Attr::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpProto_Attr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OpProto_Attr::name() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Attr.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Attr.name)
}
void OpProto_Attr::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.Attr.name)
}
void OpProto_Attr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.Attr.name)
}
::std::string* OpProto_Attr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.Attr.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Attr::release_name() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.Attr.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.Attr.name)
}

// required .paddle.framework.proto.AttrType type = 2;
bool OpProto_Attr::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpProto_Attr::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void OpProto_Attr::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpProto_Attr::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle::framework::proto::AttrType OpProto_Attr::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Attr.type)
  return static_cast< ::paddle::framework::proto::AttrType >(type_);
}
void OpProto_Attr::set_type(::paddle::framework::proto::AttrType value) {
  assert(::paddle::framework::proto::AttrType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Attr.type)
}

// required string comment = 3;
bool OpProto_Attr::has_comment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpProto_Attr::set_has_comment() {
  _has_bits_[0] |= 0x00000004u;
}
void OpProto_Attr::clear_has_comment() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpProto_Attr::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto_Attr::comment() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Attr.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Attr.comment)
}
void OpProto_Attr::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.Attr.comment)
}
void OpProto_Attr::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.Attr.comment)
}
::std::string* OpProto_Attr::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.Attr.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto_Attr::release_comment() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.Attr.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto_Attr::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.Attr.comment)
}

// optional bool generated = 4 [default = false];
bool OpProto_Attr::has_generated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpProto_Attr::set_has_generated() {
  _has_bits_[0] |= 0x00000008u;
}
void OpProto_Attr::clear_has_generated() {
  _has_bits_[0] &= ~0x00000008u;
}
void OpProto_Attr::clear_generated() {
  generated_ = false;
  clear_has_generated();
}
bool OpProto_Attr::generated() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.Attr.generated)
  return generated_;
}
void OpProto_Attr::set_generated(bool value) {
  set_has_generated();
  generated_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.Attr.generated)
}

inline const OpProto_Attr* OpProto_Attr::internal_default_instance() {
  return &OpProto_Attr_default_instance_.get();
}
// -------------------------------------------------------------------

// OpProto

// required string type = 1;
bool OpProto::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpProto::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OpProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpProto::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& OpProto::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.type)
}
void OpProto::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.type)
}
void OpProto::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.type)
}
::std::string* OpProto::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto::release_type() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.type)
}

// repeated .paddle.framework.proto.OpProto.Var inputs = 2;
int OpProto::inputs_size() const {
  return inputs_.size();
}
void OpProto::clear_inputs() {
  inputs_.Clear();
}
const ::paddle::framework::proto::OpProto_Var& OpProto::inputs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.inputs)
  return inputs_.Get(index);
}
::paddle::framework::proto::OpProto_Var* OpProto::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.inputs)
  return inputs_.Mutable(index);
}
::paddle::framework::proto::OpProto_Var* OpProto::add_inputs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpProto.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Var >*
OpProto::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpProto.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Var >&
OpProto::inputs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpProto.inputs)
  return inputs_;
}

// repeated .paddle.framework.proto.OpProto.Var outputs = 3;
int OpProto::outputs_size() const {
  return outputs_.size();
}
void OpProto::clear_outputs() {
  outputs_.Clear();
}
const ::paddle::framework::proto::OpProto_Var& OpProto::outputs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.outputs)
  return outputs_.Get(index);
}
::paddle::framework::proto::OpProto_Var* OpProto::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.outputs)
  return outputs_.Mutable(index);
}
::paddle::framework::proto::OpProto_Var* OpProto::add_outputs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpProto.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Var >*
OpProto::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpProto.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Var >&
OpProto::outputs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpProto.outputs)
  return outputs_;
}

// repeated .paddle.framework.proto.OpProto.Attr attrs = 4;
int OpProto::attrs_size() const {
  return attrs_.size();
}
void OpProto::clear_attrs() {
  attrs_.Clear();
}
const ::paddle::framework::proto::OpProto_Attr& OpProto::attrs(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.attrs)
  return attrs_.Get(index);
}
::paddle::framework::proto::OpProto_Attr* OpProto::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.attrs)
  return attrs_.Mutable(index);
}
::paddle::framework::proto::OpProto_Attr* OpProto::add_attrs() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.OpProto.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Attr >*
OpProto::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.OpProto.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpProto_Attr >&
OpProto::attrs() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.OpProto.attrs)
  return attrs_;
}

// required string comment = 5;
bool OpProto::has_comment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpProto::set_has_comment() {
  _has_bits_[0] |= 0x00000010u;
}
void OpProto::clear_has_comment() {
  _has_bits_[0] &= ~0x00000010u;
}
void OpProto::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
const ::std::string& OpProto::comment() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.OpProto.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.OpProto.comment)
}
void OpProto::set_comment(const char* value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.OpProto.comment)
}
void OpProto::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.OpProto.comment)
}
::std::string* OpProto::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.OpProto.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpProto::release_comment() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.OpProto.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpProto::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.OpProto.comment)
}

inline const OpProto* OpProto::internal_default_instance() {
  return &OpProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* VarType_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_Type_descriptor_;
}
bool VarType_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarType_Type VarType::BOOL;
const VarType_Type VarType::INT16;
const VarType_Type VarType::INT32;
const VarType_Type VarType::INT64;
const VarType_Type VarType::FP16;
const VarType_Type VarType::FP32;
const VarType_Type VarType::FP64;
const VarType_Type VarType::SIZE_T;
const VarType_Type VarType::UINT8;
const VarType_Type VarType::INT8;
const VarType_Type VarType::LOD_TENSOR;
const VarType_Type VarType::SELECTED_ROWS;
const VarType_Type VarType::FEED_MINIBATCH;
const VarType_Type VarType::FETCH_LIST;
const VarType_Type VarType::STEP_SCOPES;
const VarType_Type VarType::LOD_RANK_TABLE;
const VarType_Type VarType::LOD_TENSOR_ARRAY;
const VarType_Type VarType::PLACE_LIST;
const VarType_Type VarType::READER;
const VarType_Type VarType::RAW;
const VarType_Type VarType::TUPLE;
const VarType_Type VarType::Type_MIN;
const VarType_Type VarType::Type_MAX;
const int VarType::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_TensorDesc::kDataTypeFieldNumber;
const int VarType_TensorDesc::kDimsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_TensorDesc::VarType_TensorDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.TensorDesc)
}

void VarType_TensorDesc::InitAsDefaultInstance() {
}

VarType_TensorDesc::VarType_TensorDesc(const VarType_TensorDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.TensorDesc)
}

void VarType_TensorDesc::SharedCtor() {
  _cached_size_ = 0;
  data_type_ = 0;
}

VarType_TensorDesc::~VarType_TensorDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.TensorDesc)
  SharedDtor();
}

void VarType_TensorDesc::SharedDtor() {
}

void VarType_TensorDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType_TensorDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_TensorDesc_descriptor_;
}

const VarType_TensorDesc& VarType_TensorDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType_TensorDesc> VarType_TensorDesc_default_instance_;

VarType_TensorDesc* VarType_TensorDesc::New(::google::protobuf::Arena* arena) const {
  VarType_TensorDesc* n = new VarType_TensorDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_TensorDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.TensorDesc)
  data_type_ = 0;
  dims_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType_TensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.TensorDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.Type data_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            set_data_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dims;
        break;
      }

      // repeated int64 dims = 2;
      case 2: {
        if (tag == 16) {
         parse_dims:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_dims())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dims;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.TensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.TensorDesc)
  return false;
#undef DO_
}

void VarType_TensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.TensorDesc)
  // required .paddle.framework.proto.VarType.Type data_type = 1;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data_type(), output);
  }

  // repeated int64 dims = 2;
  for (int i = 0; i < this->dims_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->dims(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.TensorDesc)
}

::google::protobuf::uint8* VarType_TensorDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType.TensorDesc)
  // required .paddle.framework.proto.VarType.Type data_type = 1;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->data_type(), target);
  }

  // repeated int64 dims = 2;
  for (int i = 0; i < this->dims_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->dims(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType.TensorDesc)
  return target;
}

size_t VarType_TensorDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.TensorDesc)
  size_t total_size = 0;

  // required .paddle.framework.proto.VarType.Type data_type = 1;
  if (has_data_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }
  // repeated int64 dims = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->dims_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dims(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_TensorDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType.TensorDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType_TensorDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType_TensorDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType.TensorDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType.TensorDesc)
    UnsafeMergeFrom(*source);
  }
}

void VarType_TensorDesc::MergeFrom(const VarType_TensorDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.TensorDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType_TensorDesc::UnsafeMergeFrom(const VarType_TensorDesc& from) {
  GOOGLE_DCHECK(&from != this);
  dims_.UnsafeMergeFrom(from.dims_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType_TensorDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType.TensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType_TensorDesc::CopyFrom(const VarType_TensorDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.TensorDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType_TensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void VarType_TensorDesc::Swap(VarType_TensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_TensorDesc::InternalSwap(VarType_TensorDesc* other) {
  std::swap(data_type_, other->data_type_);
  dims_.UnsafeArenaSwap(&other->dims_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType_TensorDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_TensorDesc_descriptor_;
  metadata.reflection = VarType_TensorDesc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorDesc::kTensorFieldNumber;
const int VarType_LoDTensorDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorDesc::VarType_LoDTensorDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.LoDTensorDesc)
}

void VarType_LoDTensorDesc::InitAsDefaultInstance() {
  tensor_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
}

VarType_LoDTensorDesc::VarType_LoDTensorDesc(const VarType_LoDTensorDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.LoDTensorDesc)
}

void VarType_LoDTensorDesc::SharedCtor() {
  _cached_size_ = 0;
  tensor_ = NULL;
  lod_level_ = 0;
}

VarType_LoDTensorDesc::~VarType_LoDTensorDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.LoDTensorDesc)
  SharedDtor();
}

void VarType_LoDTensorDesc::SharedDtor() {
  if (this != &VarType_LoDTensorDesc_default_instance_.get()) {
    delete tensor_;
  }
}

void VarType_LoDTensorDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType_LoDTensorDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_LoDTensorDesc_descriptor_;
}

const VarType_LoDTensorDesc& VarType_LoDTensorDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType_LoDTensorDesc> VarType_LoDTensorDesc_default_instance_;

VarType_LoDTensorDesc* VarType_LoDTensorDesc::New(::google::protobuf::Arena* arena) const {
  VarType_LoDTensorDesc* n = new VarType_LoDTensorDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_LoDTensorDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tensor()) {
      if (tensor_ != NULL) tensor_->::paddle::framework::proto::VarType_TensorDesc::Clear();
    }
    lod_level_ = 0;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType_LoDTensorDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.LoDTensorDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lod_level;
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_lod_level:
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.LoDTensorDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.LoDTensorDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.LoDTensorDesc)
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tensor_, output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lod_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.LoDTensorDesc)
}

::google::protobuf::uint8* VarType_LoDTensorDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType.LoDTensorDesc)
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->tensor_, false, target);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lod_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType.LoDTensorDesc)
  return target;
}

size_t VarType_LoDTensorDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.LoDTensorDesc)
  size_t total_size = 0;

  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lod_level());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_LoDTensorDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType_LoDTensorDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType_LoDTensorDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType.LoDTensorDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType.LoDTensorDesc)
    UnsafeMergeFrom(*source);
  }
}

void VarType_LoDTensorDesc::MergeFrom(const VarType_LoDTensorDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType_LoDTensorDesc::UnsafeMergeFrom(const VarType_LoDTensorDesc& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tensor()) {
      mutable_tensor()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.tensor());
    }
    if (from.has_lod_level()) {
      set_lod_level(from.lod_level());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType_LoDTensorDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType_LoDTensorDesc::CopyFrom(const VarType_LoDTensorDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.LoDTensorDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType_LoDTensorDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorDesc::Swap(VarType_LoDTensorDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorDesc::InternalSwap(VarType_LoDTensorDesc* other) {
  std::swap(tensor_, other->tensor_);
  std::swap(lod_level_, other->lod_level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType_LoDTensorDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_LoDTensorDesc_descriptor_;
  metadata.reflection = VarType_LoDTensorDesc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_LoDTensorArrayDesc::kTensorFieldNumber;
const int VarType_LoDTensorArrayDesc::kLodLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}

void VarType_LoDTensorArrayDesc::InitAsDefaultInstance() {
  tensor_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
}

VarType_LoDTensorArrayDesc::VarType_LoDTensorArrayDesc(const VarType_LoDTensorArrayDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}

void VarType_LoDTensorArrayDesc::SharedCtor() {
  _cached_size_ = 0;
  tensor_ = NULL;
  lod_level_ = 0;
}

VarType_LoDTensorArrayDesc::~VarType_LoDTensorArrayDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  SharedDtor();
}

void VarType_LoDTensorArrayDesc::SharedDtor() {
  if (this != &VarType_LoDTensorArrayDesc_default_instance_.get()) {
    delete tensor_;
  }
}

void VarType_LoDTensorArrayDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType_LoDTensorArrayDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_LoDTensorArrayDesc_descriptor_;
}

const VarType_LoDTensorArrayDesc& VarType_LoDTensorArrayDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType_LoDTensorArrayDesc> VarType_LoDTensorArrayDesc_default_instance_;

VarType_LoDTensorArrayDesc* VarType_LoDTensorArrayDesc::New(::google::protobuf::Arena* arena) const {
  VarType_LoDTensorArrayDesc* n = new VarType_LoDTensorArrayDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_LoDTensorArrayDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tensor()) {
      if (tensor_ != NULL) tensor_->::paddle::framework::proto::VarType_TensorDesc::Clear();
    }
    lod_level_ = 0;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType_LoDTensorArrayDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lod_level;
        break;
      }

      // optional int32 lod_level = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_lod_level:
          set_has_lod_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lod_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  return false;
#undef DO_
}

void VarType_LoDTensorArrayDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tensor_, output);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lod_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.LoDTensorArrayDesc)
}

::google::protobuf::uint8* VarType_LoDTensorArrayDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->tensor_, false, target);
  }

  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lod_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  return target;
}

size_t VarType_LoDTensorArrayDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  size_t total_size = 0;

  // required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
  if (has_tensor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tensor_);
  }
  // optional int32 lod_level = 2 [default = 0];
  if (has_lod_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lod_level());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_LoDTensorArrayDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType_LoDTensorArrayDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType_LoDTensorArrayDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType.LoDTensorArrayDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType.LoDTensorArrayDesc)
    UnsafeMergeFrom(*source);
  }
}

void VarType_LoDTensorArrayDesc::MergeFrom(const VarType_LoDTensorArrayDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType_LoDTensorArrayDesc::UnsafeMergeFrom(const VarType_LoDTensorArrayDesc& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tensor()) {
      mutable_tensor()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.tensor());
    }
    if (from.has_lod_level()) {
      set_lod_level(from.lod_level());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType_LoDTensorArrayDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType_LoDTensorArrayDesc::CopyFrom(const VarType_LoDTensorArrayDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.LoDTensorArrayDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType_LoDTensorArrayDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_tensor()) {
    if (!this->tensor_->IsInitialized()) return false;
  }
  return true;
}

void VarType_LoDTensorArrayDesc::Swap(VarType_LoDTensorArrayDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_LoDTensorArrayDesc::InternalSwap(VarType_LoDTensorArrayDesc* other) {
  std::swap(tensor_, other->tensor_);
  std::swap(lod_level_, other->lod_level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType_LoDTensorArrayDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_LoDTensorArrayDesc_descriptor_;
  metadata.reflection = VarType_LoDTensorArrayDesc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_ReaderDesc::kLodTensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_ReaderDesc::VarType_ReaderDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.ReaderDesc)
}

void VarType_ReaderDesc::InitAsDefaultInstance() {
}

VarType_ReaderDesc::VarType_ReaderDesc(const VarType_ReaderDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.ReaderDesc)
}

void VarType_ReaderDesc::SharedCtor() {
  _cached_size_ = 0;
}

VarType_ReaderDesc::~VarType_ReaderDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.ReaderDesc)
  SharedDtor();
}

void VarType_ReaderDesc::SharedDtor() {
}

void VarType_ReaderDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType_ReaderDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_ReaderDesc_descriptor_;
}

const VarType_ReaderDesc& VarType_ReaderDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType_ReaderDesc> VarType_ReaderDesc_default_instance_;

VarType_ReaderDesc* VarType_ReaderDesc::New(::google::protobuf::Arena* arena) const {
  VarType_ReaderDesc* n = new VarType_ReaderDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_ReaderDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.ReaderDesc)
  lod_tensor_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType_ReaderDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.ReaderDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_lod_tensor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_lod_tensor;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.ReaderDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.ReaderDesc)
  return false;
#undef DO_
}

void VarType_ReaderDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.ReaderDesc)
  // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
  for (unsigned int i = 0, n = this->lod_tensor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lod_tensor(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.ReaderDesc)
}

::google::protobuf::uint8* VarType_ReaderDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType.ReaderDesc)
  // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
  for (unsigned int i = 0, n = this->lod_tensor_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->lod_tensor(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType.ReaderDesc)
  return target;
}

size_t VarType_ReaderDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.ReaderDesc)
  size_t total_size = 0;

  // repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
  {
    unsigned int count = this->lod_tensor_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lod_tensor(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_ReaderDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType.ReaderDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType_ReaderDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType_ReaderDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType.ReaderDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType.ReaderDesc)
    UnsafeMergeFrom(*source);
  }
}

void VarType_ReaderDesc::MergeFrom(const VarType_ReaderDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.ReaderDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType_ReaderDesc::UnsafeMergeFrom(const VarType_ReaderDesc& from) {
  GOOGLE_DCHECK(&from != this);
  lod_tensor_.MergeFrom(from.lod_tensor_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType_ReaderDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType.ReaderDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType_ReaderDesc::CopyFrom(const VarType_ReaderDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.ReaderDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType_ReaderDesc::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->lod_tensor())) return false;
  return true;
}

void VarType_ReaderDesc::Swap(VarType_ReaderDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_ReaderDesc::InternalSwap(VarType_ReaderDesc* other) {
  lod_tensor_.UnsafeArenaSwap(&other->lod_tensor_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType_ReaderDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_ReaderDesc_descriptor_;
  metadata.reflection = VarType_ReaderDesc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType_Tuple::kElementTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType_Tuple::VarType_Tuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType.Tuple)
}

void VarType_Tuple::InitAsDefaultInstance() {
}

VarType_Tuple::VarType_Tuple(const VarType_Tuple& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType.Tuple)
}

void VarType_Tuple::SharedCtor() {
  _cached_size_ = 0;
}

VarType_Tuple::~VarType_Tuple() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType.Tuple)
  SharedDtor();
}

void VarType_Tuple::SharedDtor() {
}

void VarType_Tuple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType_Tuple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_Tuple_descriptor_;
}

const VarType_Tuple& VarType_Tuple::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType_Tuple> VarType_Tuple_default_instance_;

VarType_Tuple* VarType_Tuple::New(::google::protobuf::Arena* arena) const {
  VarType_Tuple* n = new VarType_Tuple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType_Tuple::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType.Tuple)
  element_type_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType_Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType.Tuple)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.VarType.Type element_type = 1;
      case 1: {
        if (tag == 8) {
         parse_element_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            add_element_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::paddle::framework::proto::VarType_Type_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_element_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_element_type;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType.Tuple)
  return false;
#undef DO_
}

void VarType_Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType.Tuple)
  // repeated .paddle.framework.proto.VarType.Type element_type = 1;
  for (int i = 0; i < this->element_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->element_type(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType.Tuple)
}

::google::protobuf::uint8* VarType_Tuple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType.Tuple)
  // repeated .paddle.framework.proto.VarType.Type element_type = 1;
  for (int i = 0; i < this->element_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->element_type(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType.Tuple)
  return target;
}

size_t VarType_Tuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType.Tuple)
  size_t total_size = 0;

  // repeated .paddle.framework.proto.VarType.Type element_type = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->element_type_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->element_type(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType_Tuple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType.Tuple)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType_Tuple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType_Tuple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType.Tuple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType.Tuple)
    UnsafeMergeFrom(*source);
  }
}

void VarType_Tuple::MergeFrom(const VarType_Tuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType.Tuple)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType_Tuple::UnsafeMergeFrom(const VarType_Tuple& from) {
  GOOGLE_DCHECK(&from != this);
  element_type_.UnsafeMergeFrom(from.element_type_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType_Tuple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType_Tuple::CopyFrom(const VarType_Tuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType.Tuple)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType_Tuple::IsInitialized() const {

  return true;
}

void VarType_Tuple::Swap(VarType_Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType_Tuple::InternalSwap(VarType_Tuple* other) {
  element_type_.UnsafeArenaSwap(&other->element_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType_Tuple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_Tuple_descriptor_;
  metadata.reflection = VarType_Tuple_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarType::kTypeFieldNumber;
const int VarType::kSelectedRowsFieldNumber;
const int VarType::kLodTensorFieldNumber;
const int VarType::kTensorArrayFieldNumber;
const int VarType::kReaderFieldNumber;
const int VarType::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarType::VarType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarType)
}

void VarType::InitAsDefaultInstance() {
  selected_rows_ = const_cast< ::paddle::framework::proto::VarType_TensorDesc*>(
      ::paddle::framework::proto::VarType_TensorDesc::internal_default_instance());
  lod_tensor_ = const_cast< ::paddle::framework::proto::VarType_LoDTensorDesc*>(
      ::paddle::framework::proto::VarType_LoDTensorDesc::internal_default_instance());
  tensor_array_ = const_cast< ::paddle::framework::proto::VarType_LoDTensorArrayDesc*>(
      ::paddle::framework::proto::VarType_LoDTensorArrayDesc::internal_default_instance());
  reader_ = const_cast< ::paddle::framework::proto::VarType_ReaderDesc*>(
      ::paddle::framework::proto::VarType_ReaderDesc::internal_default_instance());
  tuple_ = const_cast< ::paddle::framework::proto::VarType_Tuple*>(
      ::paddle::framework::proto::VarType_Tuple::internal_default_instance());
}

VarType::VarType(const VarType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarType)
}

void VarType::SharedCtor() {
  _cached_size_ = 0;
  selected_rows_ = NULL;
  lod_tensor_ = NULL;
  tensor_array_ = NULL;
  reader_ = NULL;
  tuple_ = NULL;
  type_ = 0;
}

VarType::~VarType() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarType)
  SharedDtor();
}

void VarType::SharedDtor() {
  if (this != &VarType_default_instance_.get()) {
    delete selected_rows_;
    delete lod_tensor_;
    delete tensor_array_;
    delete reader_;
    delete tuple_;
  }
}

void VarType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarType_descriptor_;
}

const VarType& VarType::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarType> VarType_default_instance_;

VarType* VarType::New(::google::protobuf::Arena* arena) const {
  VarType* n = new VarType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarType::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarType)
  if (_has_bits_[0 / 32] & 63u) {
    type_ = 0;
    if (has_selected_rows()) {
      if (selected_rows_ != NULL) selected_rows_->::paddle::framework::proto::VarType_TensorDesc::Clear();
    }
    if (has_lod_tensor()) {
      if (lod_tensor_ != NULL) lod_tensor_->::paddle::framework::proto::VarType_LoDTensorDesc::Clear();
    }
    if (has_tensor_array()) {
      if (tensor_array_ != NULL) tensor_array_->::paddle::framework::proto::VarType_LoDTensorArrayDesc::Clear();
    }
    if (has_reader()) {
      if (reader_ != NULL) reader_->::paddle::framework::proto::VarType_ReaderDesc::Clear();
    }
    if (has_tuple()) {
      if (tuple_ != NULL) tuple_->::paddle::framework::proto::VarType_Tuple::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .paddle.framework.proto.VarType.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::paddle::framework::proto::VarType_Type_IsValid(value)) {
            set_type(static_cast< ::paddle::framework::proto::VarType_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_selected_rows;
        break;
      }

      // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
      case 2: {
        if (tag == 18) {
         parse_selected_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selected_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_lod_tensor;
        break;
      }

      // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
      case 3: {
        if (tag == 26) {
         parse_lod_tensor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lod_tensor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tensor_array;
        break;
      }

      // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
      case 4: {
        if (tag == 34) {
         parse_tensor_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_reader;
        break;
      }

      // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
      case 5: {
        if (tag == 42) {
         parse_reader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reader()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_tuple;
        break;
      }

      // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
      case 7: {
        if (tag == 58) {
         parse_tuple:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarType)
  return false;
#undef DO_
}

void VarType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarType)
  // required .paddle.framework.proto.VarType.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
  if (has_selected_rows()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->selected_rows_, output);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
  if (has_lod_tensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->lod_tensor_, output);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
  if (has_tensor_array()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->tensor_array_, output);
  }

  // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
  if (has_reader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->reader_, output);
  }

  // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
  if (has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->tuple_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarType)
}

::google::protobuf::uint8* VarType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarType)
  // required .paddle.framework.proto.VarType.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
  if (has_selected_rows()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->selected_rows_, false, target);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
  if (has_lod_tensor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->lod_tensor_, false, target);
  }

  // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
  if (has_tensor_array()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->tensor_array_, false, target);
  }

  // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
  if (has_reader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->reader_, false, target);
  }

  // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
  if (has_tuple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->tuple_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarType)
  return target;
}

size_t VarType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarType)
  size_t total_size = 0;

  // required .paddle.framework.proto.VarType.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
    if (has_selected_rows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selected_rows_);
    }

    // optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
    if (has_lod_tensor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lod_tensor_);
    }

    // optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
    if (has_tensor_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tensor_array_);
    }

    // optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
    if (has_reader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->reader_);
    }

    // optional .paddle.framework.proto.VarType.Tuple tuple = 7;
    if (has_tuple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tuple_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarType)
    UnsafeMergeFrom(*source);
  }
}

void VarType::MergeFrom(const VarType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarType)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarType::UnsafeMergeFrom(const VarType& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_selected_rows()) {
      mutable_selected_rows()->::paddle::framework::proto::VarType_TensorDesc::MergeFrom(from.selected_rows());
    }
    if (from.has_lod_tensor()) {
      mutable_lod_tensor()->::paddle::framework::proto::VarType_LoDTensorDesc::MergeFrom(from.lod_tensor());
    }
    if (from.has_tensor_array()) {
      mutable_tensor_array()->::paddle::framework::proto::VarType_LoDTensorArrayDesc::MergeFrom(from.tensor_array());
    }
    if (from.has_reader()) {
      mutable_reader()->::paddle::framework::proto::VarType_ReaderDesc::MergeFrom(from.reader());
    }
    if (from.has_tuple()) {
      mutable_tuple()->::paddle::framework::proto::VarType_Tuple::MergeFrom(from.tuple());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarType::CopyFrom(const VarType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarType)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_selected_rows()) {
    if (!this->selected_rows_->IsInitialized()) return false;
  }
  if (has_lod_tensor()) {
    if (!this->lod_tensor_->IsInitialized()) return false;
  }
  if (has_tensor_array()) {
    if (!this->tensor_array_->IsInitialized()) return false;
  }
  if (has_reader()) {
    if (!this->reader_->IsInitialized()) return false;
  }
  return true;
}

void VarType::Swap(VarType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarType::InternalSwap(VarType* other) {
  std::swap(type_, other->type_);
  std::swap(selected_rows_, other->selected_rows_);
  std::swap(lod_tensor_, other->lod_tensor_);
  std::swap(tensor_array_, other->tensor_array_);
  std::swap(reader_, other->reader_);
  std::swap(tuple_, other->tuple_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarType_descriptor_;
  metadata.reflection = VarType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarType_TensorDesc

// required .paddle.framework.proto.VarType.Type data_type = 1;
bool VarType_TensorDesc::has_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_TensorDesc::set_has_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
void VarType_TensorDesc::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_TensorDesc::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::paddle::framework::proto::VarType_Type VarType_TensorDesc::data_type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.TensorDesc.data_type)
  return static_cast< ::paddle::framework::proto::VarType_Type >(data_type_);
}
void VarType_TensorDesc::set_data_type(::paddle::framework::proto::VarType_Type value) {
  assert(::paddle::framework::proto::VarType_Type_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.TensorDesc.data_type)
}

// repeated int64 dims = 2;
int VarType_TensorDesc::dims_size() const {
  return dims_.size();
}
void VarType_TensorDesc::clear_dims() {
  dims_.Clear();
}
::google::protobuf::int64 VarType_TensorDesc::dims(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.TensorDesc.dims)
  return dims_.Get(index);
}
void VarType_TensorDesc::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.TensorDesc.dims)
}
void VarType_TensorDesc::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.VarType.TensorDesc.dims)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VarType_TensorDesc::dims() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.VarType.TensorDesc.dims)
  return dims_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VarType_TensorDesc::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.VarType.TensorDesc.dims)
  return &dims_;
}

inline const VarType_TensorDesc* VarType_TensorDesc::internal_default_instance() {
  return &VarType_TensorDesc_default_instance_.get();
}
// -------------------------------------------------------------------

// VarType_LoDTensorDesc

// required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
bool VarType_LoDTensorDesc::has_tensor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_LoDTensorDesc::set_has_tensor() {
  _has_bits_[0] |= 0x00000001u;
}
void VarType_LoDTensorDesc::clear_has_tensor() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_LoDTensorDesc::clear_tensor() {
  if (tensor_ != NULL) tensor_->::paddle::framework::proto::VarType_TensorDesc::Clear();
  clear_has_tensor();
}
const ::paddle::framework::proto::VarType_TensorDesc& VarType_LoDTensorDesc::tensor() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.LoDTensorDesc.tensor)
  return tensor_ != NULL ? *tensor_
                         : *::paddle::framework::proto::VarType_TensorDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_TensorDesc* VarType_LoDTensorDesc::mutable_tensor() {
  set_has_tensor();
  if (tensor_ == NULL) {
    tensor_ = new ::paddle::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.LoDTensorDesc.tensor)
  return tensor_;
}
::paddle::framework::proto::VarType_TensorDesc* VarType_LoDTensorDesc::release_tensor() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.LoDTensorDesc.tensor)
  clear_has_tensor();
  ::paddle::framework::proto::VarType_TensorDesc* temp = tensor_;
  tensor_ = NULL;
  return temp;
}
void VarType_LoDTensorDesc::set_allocated_tensor(::paddle::framework::proto::VarType_TensorDesc* tensor) {
  delete tensor_;
  tensor_ = tensor;
  if (tensor) {
    set_has_tensor();
  } else {
    clear_has_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.LoDTensorDesc.tensor)
}

// optional int32 lod_level = 2 [default = 0];
bool VarType_LoDTensorDesc::has_lod_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType_LoDTensorDesc::set_has_lod_level() {
  _has_bits_[0] |= 0x00000002u;
}
void VarType_LoDTensorDesc::clear_has_lod_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType_LoDTensorDesc::clear_lod_level() {
  lod_level_ = 0;
  clear_has_lod_level();
}
::google::protobuf::int32 VarType_LoDTensorDesc::lod_level() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.LoDTensorDesc.lod_level)
  return lod_level_;
}
void VarType_LoDTensorDesc::set_lod_level(::google::protobuf::int32 value) {
  set_has_lod_level();
  lod_level_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.LoDTensorDesc.lod_level)
}

inline const VarType_LoDTensorDesc* VarType_LoDTensorDesc::internal_default_instance() {
  return &VarType_LoDTensorDesc_default_instance_.get();
}
// -------------------------------------------------------------------

// VarType_LoDTensorArrayDesc

// required .paddle.framework.proto.VarType.TensorDesc tensor = 1;
bool VarType_LoDTensorArrayDesc::has_tensor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType_LoDTensorArrayDesc::set_has_tensor() {
  _has_bits_[0] |= 0x00000001u;
}
void VarType_LoDTensorArrayDesc::clear_has_tensor() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType_LoDTensorArrayDesc::clear_tensor() {
  if (tensor_ != NULL) tensor_->::paddle::framework::proto::VarType_TensorDesc::Clear();
  clear_has_tensor();
}
const ::paddle::framework::proto::VarType_TensorDesc& VarType_LoDTensorArrayDesc::tensor() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  return tensor_ != NULL ? *tensor_
                         : *::paddle::framework::proto::VarType_TensorDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_TensorDesc* VarType_LoDTensorArrayDesc::mutable_tensor() {
  set_has_tensor();
  if (tensor_ == NULL) {
    tensor_ = new ::paddle::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  return tensor_;
}
::paddle::framework::proto::VarType_TensorDesc* VarType_LoDTensorArrayDesc::release_tensor() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.LoDTensorArrayDesc.tensor)
  clear_has_tensor();
  ::paddle::framework::proto::VarType_TensorDesc* temp = tensor_;
  tensor_ = NULL;
  return temp;
}
void VarType_LoDTensorArrayDesc::set_allocated_tensor(::paddle::framework::proto::VarType_TensorDesc* tensor) {
  delete tensor_;
  tensor_ = tensor;
  if (tensor) {
    set_has_tensor();
  } else {
    clear_has_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.LoDTensorArrayDesc.tensor)
}

// optional int32 lod_level = 2 [default = 0];
bool VarType_LoDTensorArrayDesc::has_lod_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType_LoDTensorArrayDesc::set_has_lod_level() {
  _has_bits_[0] |= 0x00000002u;
}
void VarType_LoDTensorArrayDesc::clear_has_lod_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType_LoDTensorArrayDesc::clear_lod_level() {
  lod_level_ = 0;
  clear_has_lod_level();
}
::google::protobuf::int32 VarType_LoDTensorArrayDesc::lod_level() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.LoDTensorArrayDesc.lod_level)
  return lod_level_;
}
void VarType_LoDTensorArrayDesc::set_lod_level(::google::protobuf::int32 value) {
  set_has_lod_level();
  lod_level_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.LoDTensorArrayDesc.lod_level)
}

inline const VarType_LoDTensorArrayDesc* VarType_LoDTensorArrayDesc::internal_default_instance() {
  return &VarType_LoDTensorArrayDesc_default_instance_.get();
}
// -------------------------------------------------------------------

// VarType_ReaderDesc

// repeated .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 1;
int VarType_ReaderDesc::lod_tensor_size() const {
  return lod_tensor_.size();
}
void VarType_ReaderDesc::clear_lod_tensor() {
  lod_tensor_.Clear();
}
const ::paddle::framework::proto::VarType_LoDTensorDesc& VarType_ReaderDesc::lod_tensor(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Get(index);
}
::paddle::framework::proto::VarType_LoDTensorDesc* VarType_ReaderDesc::mutable_lod_tensor(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Mutable(index);
}
::paddle::framework::proto::VarType_LoDTensorDesc* VarType_ReaderDesc::add_lod_tensor() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::VarType_LoDTensorDesc >*
VarType_ReaderDesc::mutable_lod_tensor() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.VarType.ReaderDesc.lod_tensor)
  return &lod_tensor_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::VarType_LoDTensorDesc >&
VarType_ReaderDesc::lod_tensor() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.VarType.ReaderDesc.lod_tensor)
  return lod_tensor_;
}

inline const VarType_ReaderDesc* VarType_ReaderDesc::internal_default_instance() {
  return &VarType_ReaderDesc_default_instance_.get();
}
// -------------------------------------------------------------------

// VarType_Tuple

// repeated .paddle.framework.proto.VarType.Type element_type = 1;
int VarType_Tuple::element_type_size() const {
  return element_type_.size();
}
void VarType_Tuple::clear_element_type() {
  element_type_.Clear();
}
::paddle::framework::proto::VarType_Type VarType_Tuple::element_type(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.Tuple.element_type)
  return static_cast< ::paddle::framework::proto::VarType_Type >(element_type_.Get(index));
}
void VarType_Tuple::set_element_type(int index, ::paddle::framework::proto::VarType_Type value) {
  assert(::paddle::framework::proto::VarType_Type_IsValid(value));
  element_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.Tuple.element_type)
}
void VarType_Tuple::add_element_type(::paddle::framework::proto::VarType_Type value) {
  assert(::paddle::framework::proto::VarType_Type_IsValid(value));
  element_type_.Add(value);
  // @@protoc_insertion_point(field_add:paddle.framework.proto.VarType.Tuple.element_type)
}
const ::google::protobuf::RepeatedField<int>&
VarType_Tuple::element_type() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.VarType.Tuple.element_type)
  return element_type_;
}
::google::protobuf::RepeatedField<int>*
VarType_Tuple::mutable_element_type() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.VarType.Tuple.element_type)
  return &element_type_;
}

inline const VarType_Tuple* VarType_Tuple::internal_default_instance() {
  return &VarType_Tuple_default_instance_.get();
}
// -------------------------------------------------------------------

// VarType

// required .paddle.framework.proto.VarType.Type type = 1;
bool VarType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void VarType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarType::clear_type() {
  type_ = 0;
  clear_has_type();
}
::paddle::framework::proto::VarType_Type VarType::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.type)
  return static_cast< ::paddle::framework::proto::VarType_Type >(type_);
}
void VarType::set_type(::paddle::framework::proto::VarType_Type value) {
  assert(::paddle::framework::proto::VarType_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarType.type)
}

// optional .paddle.framework.proto.VarType.TensorDesc selected_rows = 2;
bool VarType::has_selected_rows() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarType::set_has_selected_rows() {
  _has_bits_[0] |= 0x00000002u;
}
void VarType::clear_has_selected_rows() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarType::clear_selected_rows() {
  if (selected_rows_ != NULL) selected_rows_->::paddle::framework::proto::VarType_TensorDesc::Clear();
  clear_has_selected_rows();
}
const ::paddle::framework::proto::VarType_TensorDesc& VarType::selected_rows() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.selected_rows)
  return selected_rows_ != NULL ? *selected_rows_
                         : *::paddle::framework::proto::VarType_TensorDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_TensorDesc* VarType::mutable_selected_rows() {
  set_has_selected_rows();
  if (selected_rows_ == NULL) {
    selected_rows_ = new ::paddle::framework::proto::VarType_TensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.selected_rows)
  return selected_rows_;
}
::paddle::framework::proto::VarType_TensorDesc* VarType::release_selected_rows() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.selected_rows)
  clear_has_selected_rows();
  ::paddle::framework::proto::VarType_TensorDesc* temp = selected_rows_;
  selected_rows_ = NULL;
  return temp;
}
void VarType::set_allocated_selected_rows(::paddle::framework::proto::VarType_TensorDesc* selected_rows) {
  delete selected_rows_;
  selected_rows_ = selected_rows;
  if (selected_rows) {
    set_has_selected_rows();
  } else {
    clear_has_selected_rows();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.selected_rows)
}

// optional .paddle.framework.proto.VarType.LoDTensorDesc lod_tensor = 3;
bool VarType::has_lod_tensor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VarType::set_has_lod_tensor() {
  _has_bits_[0] |= 0x00000004u;
}
void VarType::clear_has_lod_tensor() {
  _has_bits_[0] &= ~0x00000004u;
}
void VarType::clear_lod_tensor() {
  if (lod_tensor_ != NULL) lod_tensor_->::paddle::framework::proto::VarType_LoDTensorDesc::Clear();
  clear_has_lod_tensor();
}
const ::paddle::framework::proto::VarType_LoDTensorDesc& VarType::lod_tensor() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.lod_tensor)
  return lod_tensor_ != NULL ? *lod_tensor_
                         : *::paddle::framework::proto::VarType_LoDTensorDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_LoDTensorDesc* VarType::mutable_lod_tensor() {
  set_has_lod_tensor();
  if (lod_tensor_ == NULL) {
    lod_tensor_ = new ::paddle::framework::proto::VarType_LoDTensorDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.lod_tensor)
  return lod_tensor_;
}
::paddle::framework::proto::VarType_LoDTensorDesc* VarType::release_lod_tensor() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.lod_tensor)
  clear_has_lod_tensor();
  ::paddle::framework::proto::VarType_LoDTensorDesc* temp = lod_tensor_;
  lod_tensor_ = NULL;
  return temp;
}
void VarType::set_allocated_lod_tensor(::paddle::framework::proto::VarType_LoDTensorDesc* lod_tensor) {
  delete lod_tensor_;
  lod_tensor_ = lod_tensor;
  if (lod_tensor) {
    set_has_lod_tensor();
  } else {
    clear_has_lod_tensor();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.lod_tensor)
}

// optional .paddle.framework.proto.VarType.LoDTensorArrayDesc tensor_array = 4;
bool VarType::has_tensor_array() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VarType::set_has_tensor_array() {
  _has_bits_[0] |= 0x00000008u;
}
void VarType::clear_has_tensor_array() {
  _has_bits_[0] &= ~0x00000008u;
}
void VarType::clear_tensor_array() {
  if (tensor_array_ != NULL) tensor_array_->::paddle::framework::proto::VarType_LoDTensorArrayDesc::Clear();
  clear_has_tensor_array();
}
const ::paddle::framework::proto::VarType_LoDTensorArrayDesc& VarType::tensor_array() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.tensor_array)
  return tensor_array_ != NULL ? *tensor_array_
                         : *::paddle::framework::proto::VarType_LoDTensorArrayDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_LoDTensorArrayDesc* VarType::mutable_tensor_array() {
  set_has_tensor_array();
  if (tensor_array_ == NULL) {
    tensor_array_ = new ::paddle::framework::proto::VarType_LoDTensorArrayDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.tensor_array)
  return tensor_array_;
}
::paddle::framework::proto::VarType_LoDTensorArrayDesc* VarType::release_tensor_array() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.tensor_array)
  clear_has_tensor_array();
  ::paddle::framework::proto::VarType_LoDTensorArrayDesc* temp = tensor_array_;
  tensor_array_ = NULL;
  return temp;
}
void VarType::set_allocated_tensor_array(::paddle::framework::proto::VarType_LoDTensorArrayDesc* tensor_array) {
  delete tensor_array_;
  tensor_array_ = tensor_array;
  if (tensor_array) {
    set_has_tensor_array();
  } else {
    clear_has_tensor_array();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.tensor_array)
}

// optional .paddle.framework.proto.VarType.ReaderDesc reader = 5;
bool VarType::has_reader() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VarType::set_has_reader() {
  _has_bits_[0] |= 0x00000010u;
}
void VarType::clear_has_reader() {
  _has_bits_[0] &= ~0x00000010u;
}
void VarType::clear_reader() {
  if (reader_ != NULL) reader_->::paddle::framework::proto::VarType_ReaderDesc::Clear();
  clear_has_reader();
}
const ::paddle::framework::proto::VarType_ReaderDesc& VarType::reader() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.reader)
  return reader_ != NULL ? *reader_
                         : *::paddle::framework::proto::VarType_ReaderDesc::internal_default_instance();
}
::paddle::framework::proto::VarType_ReaderDesc* VarType::mutable_reader() {
  set_has_reader();
  if (reader_ == NULL) {
    reader_ = new ::paddle::framework::proto::VarType_ReaderDesc;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.reader)
  return reader_;
}
::paddle::framework::proto::VarType_ReaderDesc* VarType::release_reader() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.reader)
  clear_has_reader();
  ::paddle::framework::proto::VarType_ReaderDesc* temp = reader_;
  reader_ = NULL;
  return temp;
}
void VarType::set_allocated_reader(::paddle::framework::proto::VarType_ReaderDesc* reader) {
  delete reader_;
  reader_ = reader;
  if (reader) {
    set_has_reader();
  } else {
    clear_has_reader();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.reader)
}

// optional .paddle.framework.proto.VarType.Tuple tuple = 7;
bool VarType::has_tuple() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VarType::set_has_tuple() {
  _has_bits_[0] |= 0x00000020u;
}
void VarType::clear_has_tuple() {
  _has_bits_[0] &= ~0x00000020u;
}
void VarType::clear_tuple() {
  if (tuple_ != NULL) tuple_->::paddle::framework::proto::VarType_Tuple::Clear();
  clear_has_tuple();
}
const ::paddle::framework::proto::VarType_Tuple& VarType::tuple() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarType.tuple)
  return tuple_ != NULL ? *tuple_
                         : *::paddle::framework::proto::VarType_Tuple::internal_default_instance();
}
::paddle::framework::proto::VarType_Tuple* VarType::mutable_tuple() {
  set_has_tuple();
  if (tuple_ == NULL) {
    tuple_ = new ::paddle::framework::proto::VarType_Tuple;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarType.tuple)
  return tuple_;
}
::paddle::framework::proto::VarType_Tuple* VarType::release_tuple() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarType.tuple)
  clear_has_tuple();
  ::paddle::framework::proto::VarType_Tuple* temp = tuple_;
  tuple_ = NULL;
  return temp;
}
void VarType::set_allocated_tuple(::paddle::framework::proto::VarType_Tuple* tuple) {
  delete tuple_;
  tuple_ = tuple;
  if (tuple) {
    set_has_tuple();
  } else {
    clear_has_tuple();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarType.tuple)
}

inline const VarType* VarType::internal_default_instance() {
  return &VarType_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDesc::kNameFieldNumber;
const int VarDesc::kTypeFieldNumber;
const int VarDesc::kPersistableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDesc::VarDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.VarDesc)
}

void VarDesc::InitAsDefaultInstance() {
  type_ = const_cast< ::paddle::framework::proto::VarType*>(
      ::paddle::framework::proto::VarType::internal_default_instance());
}

VarDesc::VarDesc(const VarDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.VarDesc)
}

void VarDesc::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  persistable_ = false;
}

VarDesc::~VarDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.VarDesc)
  SharedDtor();
}

void VarDesc::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &VarDesc_default_instance_.get()) {
    delete type_;
  }
}

void VarDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VarDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VarDesc_descriptor_;
}

const VarDesc& VarDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<VarDesc> VarDesc_default_instance_;

VarDesc* VarDesc::New(::google::protobuf::Arena* arena) const {
  VarDesc* n = new VarDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VarDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.VarDesc)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      if (type_ != NULL) type_->::paddle::framework::proto::VarType::Clear();
    }
    persistable_ = false;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VarDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.VarDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "paddle.framework.proto.VarDesc.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // required .paddle.framework.proto.VarType type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_persistable;
        break;
      }

      // optional bool persistable = 3 [default = false];
      case 3: {
        if (tag == 24) {
         parse_persistable:
          set_has_persistable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.VarDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.VarDesc)
  return false;
#undef DO_
}

void VarDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.VarDesc)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.VarDesc.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .paddle.framework.proto.VarType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  // optional bool persistable = 3 [default = false];
  if (has_persistable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->persistable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.VarDesc)
}

::google::protobuf::uint8* VarDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.VarDesc)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "paddle.framework.proto.VarDesc.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .paddle.framework.proto.VarType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_, false, target);
  }

  // optional bool persistable = 3 [default = false];
  if (has_persistable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->persistable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.VarDesc)
  return target;
}

size_t VarDesc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.VarDesc)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .paddle.framework.proto.VarType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  return total_size;
}
size_t VarDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.VarDesc)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .paddle.framework.proto.VarType type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool persistable = 3 [default = false];
  if (has_persistable()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VarDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.VarDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VarDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.VarDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.VarDesc)
    UnsafeMergeFrom(*source);
  }
}

void VarDesc::MergeFrom(const VarDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.VarDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void VarDesc::UnsafeMergeFrom(const VarDesc& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      mutable_type()->::paddle::framework::proto::VarType::MergeFrom(from.type());
    }
    if (from.has_persistable()) {
      set_persistable(from.persistable());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void VarDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.VarDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarDesc::CopyFrom(const VarDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.VarDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool VarDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void VarDesc::Swap(VarDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDesc::InternalSwap(VarDesc* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(persistable_, other->persistable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VarDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VarDesc_descriptor_;
  metadata.reflection = VarDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VarDesc

// required string name = 1;
bool VarDesc::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VarDesc::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void VarDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void VarDesc::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& VarDesc::name() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarDesc.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarDesc::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarDesc.name)
}
void VarDesc::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:paddle.framework.proto.VarDesc.name)
}
void VarDesc::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:paddle.framework.proto.VarDesc.name)
}
::std::string* VarDesc::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarDesc.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VarDesc::release_name() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarDesc.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VarDesc::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarDesc.name)
}

// required .paddle.framework.proto.VarType type = 2;
bool VarDesc::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VarDesc::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void VarDesc::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void VarDesc::clear_type() {
  if (type_ != NULL) type_->::paddle::framework::proto::VarType::Clear();
  clear_has_type();
}
const ::paddle::framework::proto::VarType& VarDesc::type() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarDesc.type)
  return type_ != NULL ? *type_
                         : *::paddle::framework::proto::VarType::internal_default_instance();
}
::paddle::framework::proto::VarType* VarDesc::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::paddle::framework::proto::VarType;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.VarDesc.type)
  return type_;
}
::paddle::framework::proto::VarType* VarDesc::release_type() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.VarDesc.type)
  clear_has_type();
  ::paddle::framework::proto::VarType* temp = type_;
  type_ = NULL;
  return temp;
}
void VarDesc::set_allocated_type(::paddle::framework::proto::VarType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.VarDesc.type)
}

// optional bool persistable = 3 [default = false];
bool VarDesc::has_persistable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VarDesc::set_has_persistable() {
  _has_bits_[0] |= 0x00000004u;
}
void VarDesc::clear_has_persistable() {
  _has_bits_[0] &= ~0x00000004u;
}
void VarDesc::clear_persistable() {
  persistable_ = false;
  clear_has_persistable();
}
bool VarDesc::persistable() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.VarDesc.persistable)
  return persistable_;
}
void VarDesc::set_persistable(bool value) {
  set_has_persistable();
  persistable_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.VarDesc.persistable)
}

inline const VarDesc* VarDesc::internal_default_instance() {
  return &VarDesc_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockDesc::kIdxFieldNumber;
const int BlockDesc::kParentIdxFieldNumber;
const int BlockDesc::kVarsFieldNumber;
const int BlockDesc::kOpsFieldNumber;
const int BlockDesc::kForwardBlockIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockDesc::BlockDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.BlockDesc)
}

void BlockDesc::InitAsDefaultInstance() {
}

BlockDesc::BlockDesc(const BlockDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.BlockDesc)
}

void BlockDesc::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&idx_, 0, reinterpret_cast<char*>(&parent_idx_) -
    reinterpret_cast<char*>(&idx_) + sizeof(parent_idx_));
  forward_block_idx_ = -1;
}

BlockDesc::~BlockDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.BlockDesc)
  SharedDtor();
}

void BlockDesc::SharedDtor() {
}

void BlockDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockDesc_descriptor_;
}

const BlockDesc& BlockDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BlockDesc> BlockDesc_default_instance_;

BlockDesc* BlockDesc::New(::google::protobuf::Arena* arena) const {
  BlockDesc* n = new BlockDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.BlockDesc)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BlockDesc, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BlockDesc*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 19u) {
    ZR_(idx_, parent_idx_);
    forward_block_idx_ = -1;
  }

#undef ZR_HELPER_
#undef ZR_

  vars_.Clear();
  ops_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BlockDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.BlockDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idx = 1;
      case 1: {
        if (tag == 8) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_parent_idx;
        break;
      }

      // required int32 parent_idx = 2;
      case 2: {
        if (tag == 16) {
         parse_parent_idx:
          set_has_parent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vars;
        break;
      }

      // repeated .paddle.framework.proto.VarDesc vars = 3;
      case 3: {
        if (tag == 26) {
         parse_vars:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vars:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_vars;
        if (input->ExpectTag(34)) goto parse_loop_ops;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .paddle.framework.proto.OpDesc ops = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ops:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ops()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_ops;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_forward_block_idx;
        break;
      }

      // optional int32 forward_block_idx = 5 [default = -1];
      case 5: {
        if (tag == 40) {
         parse_forward_block_idx:
          set_has_forward_block_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &forward_block_idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.BlockDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.BlockDesc)
  return false;
#undef DO_
}

void BlockDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.BlockDesc)
  // required int32 idx = 1;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(), output);
  }

  // required int32 parent_idx = 2;
  if (has_parent_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parent_idx(), output);
  }

  // repeated .paddle.framework.proto.VarDesc vars = 3;
  for (unsigned int i = 0, n = this->vars_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->vars(i), output);
  }

  // repeated .paddle.framework.proto.OpDesc ops = 4;
  for (unsigned int i = 0, n = this->ops_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->ops(i), output);
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (has_forward_block_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->forward_block_idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.BlockDesc)
}

::google::protobuf::uint8* BlockDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.BlockDesc)
  // required int32 idx = 1;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idx(), target);
  }

  // required int32 parent_idx = 2;
  if (has_parent_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parent_idx(), target);
  }

  // repeated .paddle.framework.proto.VarDesc vars = 3;
  for (unsigned int i = 0, n = this->vars_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->vars(i), false, target);
  }

  // repeated .paddle.framework.proto.OpDesc ops = 4;
  for (unsigned int i = 0, n = this->ops_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->ops(i), false, target);
  }

  // optional int32 forward_block_idx = 5 [default = -1];
  if (has_forward_block_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->forward_block_idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.BlockDesc)
  return target;
}

size_t BlockDesc::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:paddle.framework.proto.BlockDesc)
  size_t total_size = 0;

  if (has_idx()) {
    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());
  }

  if (has_parent_idx()) {
    // required int32 parent_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_idx());
  }

  return total_size;
}
size_t BlockDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.BlockDesc)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 idx = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idx());

    // required int32 parent_idx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_idx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 forward_block_idx = 5 [default = -1];
  if (has_forward_block_idx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->forward_block_idx());
  }

  // repeated .paddle.framework.proto.VarDesc vars = 3;
  {
    unsigned int count = this->vars_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vars(i));
    }
  }

  // repeated .paddle.framework.proto.OpDesc ops = 4;
  {
    unsigned int count = this->ops_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ops(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.BlockDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BlockDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.BlockDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.BlockDesc)
    UnsafeMergeFrom(*source);
  }
}

void BlockDesc::MergeFrom(const BlockDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.BlockDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BlockDesc::UnsafeMergeFrom(const BlockDesc& from) {
  GOOGLE_DCHECK(&from != this);
  vars_.MergeFrom(from.vars_);
  ops_.MergeFrom(from.ops_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idx()) {
      set_idx(from.idx());
    }
    if (from.has_parent_idx()) {
      set_parent_idx(from.parent_idx());
    }
    if (from.has_forward_block_idx()) {
      set_forward_block_idx(from.forward_block_idx());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BlockDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.BlockDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockDesc::CopyFrom(const BlockDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.BlockDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BlockDesc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vars())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ops())) return false;
  return true;
}

void BlockDesc::Swap(BlockDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockDesc::InternalSwap(BlockDesc* other) {
  std::swap(idx_, other->idx_);
  std::swap(parent_idx_, other->parent_idx_);
  vars_.UnsafeArenaSwap(&other->vars_);
  ops_.UnsafeArenaSwap(&other->ops_);
  std::swap(forward_block_idx_, other->forward_block_idx_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockDesc_descriptor_;
  metadata.reflection = BlockDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockDesc

// required int32 idx = 1;
bool BlockDesc::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BlockDesc::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void BlockDesc::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void BlockDesc::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
::google::protobuf::int32 BlockDesc::idx() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.BlockDesc.idx)
  return idx_;
}
void BlockDesc::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.BlockDesc.idx)
}

// required int32 parent_idx = 2;
bool BlockDesc::has_parent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BlockDesc::set_has_parent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
void BlockDesc::clear_has_parent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
void BlockDesc::clear_parent_idx() {
  parent_idx_ = 0;
  clear_has_parent_idx();
}
::google::protobuf::int32 BlockDesc::parent_idx() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.BlockDesc.parent_idx)
  return parent_idx_;
}
void BlockDesc::set_parent_idx(::google::protobuf::int32 value) {
  set_has_parent_idx();
  parent_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.BlockDesc.parent_idx)
}

// repeated .paddle.framework.proto.VarDesc vars = 3;
int BlockDesc::vars_size() const {
  return vars_.size();
}
void BlockDesc::clear_vars() {
  vars_.Clear();
}
const ::paddle::framework::proto::VarDesc& BlockDesc::vars(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.BlockDesc.vars)
  return vars_.Get(index);
}
::paddle::framework::proto::VarDesc* BlockDesc::mutable_vars(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.BlockDesc.vars)
  return vars_.Mutable(index);
}
::paddle::framework::proto::VarDesc* BlockDesc::add_vars() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.BlockDesc.vars)
  return vars_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::VarDesc >*
BlockDesc::mutable_vars() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.BlockDesc.vars)
  return &vars_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::VarDesc >&
BlockDesc::vars() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.BlockDesc.vars)
  return vars_;
}

// repeated .paddle.framework.proto.OpDesc ops = 4;
int BlockDesc::ops_size() const {
  return ops_.size();
}
void BlockDesc::clear_ops() {
  ops_.Clear();
}
const ::paddle::framework::proto::OpDesc& BlockDesc::ops(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.BlockDesc.ops)
  return ops_.Get(index);
}
::paddle::framework::proto::OpDesc* BlockDesc::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.BlockDesc.ops)
  return ops_.Mutable(index);
}
::paddle::framework::proto::OpDesc* BlockDesc::add_ops() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.BlockDesc.ops)
  return ops_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc >*
BlockDesc::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.BlockDesc.ops)
  return &ops_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::OpDesc >&
BlockDesc::ops() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.BlockDesc.ops)
  return ops_;
}

// optional int32 forward_block_idx = 5 [default = -1];
bool BlockDesc::has_forward_block_idx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BlockDesc::set_has_forward_block_idx() {
  _has_bits_[0] |= 0x00000010u;
}
void BlockDesc::clear_has_forward_block_idx() {
  _has_bits_[0] &= ~0x00000010u;
}
void BlockDesc::clear_forward_block_idx() {
  forward_block_idx_ = -1;
  clear_has_forward_block_idx();
}
::google::protobuf::int32 BlockDesc::forward_block_idx() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.BlockDesc.forward_block_idx)
  return forward_block_idx_;
}
void BlockDesc::set_forward_block_idx(::google::protobuf::int32 value) {
  set_has_forward_block_idx();
  forward_block_idx_ = value;
  // @@protoc_insertion_point(field_set:paddle.framework.proto.BlockDesc.forward_block_idx)
}

inline const BlockDesc* BlockDesc::internal_default_instance() {
  return &BlockDesc_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramDesc::kBlocksFieldNumber;
const int ProgramDesc::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramDesc::ProgramDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_framework_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:paddle.framework.proto.ProgramDesc)
}

void ProgramDesc::InitAsDefaultInstance() {
  version_ = const_cast< ::paddle::framework::proto::Version*>(
      ::paddle::framework::proto::Version::internal_default_instance());
}

ProgramDesc::ProgramDesc(const ProgramDesc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:paddle.framework.proto.ProgramDesc)
}

void ProgramDesc::SharedCtor() {
  _cached_size_ = 0;
  version_ = NULL;
}

ProgramDesc::~ProgramDesc() {
  // @@protoc_insertion_point(destructor:paddle.framework.proto.ProgramDesc)
  SharedDtor();
}

void ProgramDesc::SharedDtor() {
  if (this != &ProgramDesc_default_instance_.get()) {
    delete version_;
  }
}

void ProgramDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgramDesc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProgramDesc_descriptor_;
}

const ProgramDesc& ProgramDesc::default_instance() {
  protobuf_InitDefaults_framework_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ProgramDesc> ProgramDesc_default_instance_;

ProgramDesc* ProgramDesc::New(::google::protobuf::Arena* arena) const {
  ProgramDesc* n = new ProgramDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgramDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:paddle.framework.proto.ProgramDesc)
  if (has_version()) {
    if (version_ != NULL) version_->::paddle::framework::proto::Version::Clear();
  }
  blocks_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProgramDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:paddle.framework.proto.ProgramDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .paddle.framework.proto.BlockDesc blocks = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_blocks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional .paddle.framework.proto.Version version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:paddle.framework.proto.ProgramDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:paddle.framework.proto.ProgramDesc)
  return false;
#undef DO_
}

void ProgramDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:paddle.framework.proto.ProgramDesc)
  // repeated .paddle.framework.proto.BlockDesc blocks = 1;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blocks(i), output);
  }

  // optional .paddle.framework.proto.Version version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->version_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:paddle.framework.proto.ProgramDesc)
}

::google::protobuf::uint8* ProgramDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:paddle.framework.proto.ProgramDesc)
  // repeated .paddle.framework.proto.BlockDesc blocks = 1;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->blocks(i), false, target);
  }

  // optional .paddle.framework.proto.Version version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->version_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:paddle.framework.proto.ProgramDesc)
  return target;
}

size_t ProgramDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:paddle.framework.proto.ProgramDesc)
  size_t total_size = 0;

  // optional .paddle.framework.proto.Version version = 2;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->version_);
  }

  // repeated .paddle.framework.proto.BlockDesc blocks = 1;
  {
    unsigned int count = this->blocks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocks(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgramDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:paddle.framework.proto.ProgramDesc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProgramDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:paddle.framework.proto.ProgramDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:paddle.framework.proto.ProgramDesc)
    UnsafeMergeFrom(*source);
  }
}

void ProgramDesc::MergeFrom(const ProgramDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:paddle.framework.proto.ProgramDesc)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ProgramDesc::UnsafeMergeFrom(const ProgramDesc& from) {
  GOOGLE_DCHECK(&from != this);
  blocks_.MergeFrom(from.blocks_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_version()) {
      mutable_version()->::paddle::framework::proto::Version::MergeFrom(from.version());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ProgramDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:paddle.framework.proto.ProgramDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramDesc::CopyFrom(const ProgramDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:paddle.framework.proto.ProgramDesc)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ProgramDesc::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->blocks())) return false;
  return true;
}

void ProgramDesc::Swap(ProgramDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramDesc::InternalSwap(ProgramDesc* other) {
  blocks_.UnsafeArenaSwap(&other->blocks_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProgramDesc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProgramDesc_descriptor_;
  metadata.reflection = ProgramDesc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProgramDesc

// repeated .paddle.framework.proto.BlockDesc blocks = 1;
int ProgramDesc::blocks_size() const {
  return blocks_.size();
}
void ProgramDesc::clear_blocks() {
  blocks_.Clear();
}
const ::paddle::framework::proto::BlockDesc& ProgramDesc::blocks(int index) const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.ProgramDesc.blocks)
  return blocks_.Get(index);
}
::paddle::framework::proto::BlockDesc* ProgramDesc::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.ProgramDesc.blocks)
  return blocks_.Mutable(index);
}
::paddle::framework::proto::BlockDesc* ProgramDesc::add_blocks() {
  // @@protoc_insertion_point(field_add:paddle.framework.proto.ProgramDesc.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::BlockDesc >*
ProgramDesc::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:paddle.framework.proto.ProgramDesc.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::paddle::framework::proto::BlockDesc >&
ProgramDesc::blocks() const {
  // @@protoc_insertion_point(field_list:paddle.framework.proto.ProgramDesc.blocks)
  return blocks_;
}

// optional .paddle.framework.proto.Version version = 2;
bool ProgramDesc::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProgramDesc::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void ProgramDesc::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProgramDesc::clear_version() {
  if (version_ != NULL) version_->::paddle::framework::proto::Version::Clear();
  clear_has_version();
}
const ::paddle::framework::proto::Version& ProgramDesc::version() const {
  // @@protoc_insertion_point(field_get:paddle.framework.proto.ProgramDesc.version)
  return version_ != NULL ? *version_
                         : *::paddle::framework::proto::Version::internal_default_instance();
}
::paddle::framework::proto::Version* ProgramDesc::mutable_version() {
  set_has_version();
  if (version_ == NULL) {
    version_ = new ::paddle::framework::proto::Version;
  }
  // @@protoc_insertion_point(field_mutable:paddle.framework.proto.ProgramDesc.version)
  return version_;
}
::paddle::framework::proto::Version* ProgramDesc::release_version() {
  // @@protoc_insertion_point(field_release:paddle.framework.proto.ProgramDesc.version)
  clear_has_version();
  ::paddle::framework::proto::Version* temp = version_;
  version_ = NULL;
  return temp;
}
void ProgramDesc::set_allocated_version(::paddle::framework::proto::Version* version) {
  delete version_;
  version_ = version;
  if (version) {
    set_has_version();
  } else {
    clear_has_version();
  }
  // @@protoc_insertion_point(field_set_allocated:paddle.framework.proto.ProgramDesc.version)
}

inline const ProgramDesc* ProgramDesc::internal_default_instance() {
  return &ProgramDesc_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace framework
}  // namespace paddle

// @@protoc_insertion_point(global_scope)
